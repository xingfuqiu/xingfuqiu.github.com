<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>邱兴福</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.qxyer.com/"/>
  <updated>2018-04-27T08:00:08.000Z</updated>
  <id>http://www.qxyer.com/</id>
  
  <author>
    <name>XingfuQiu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello,西西</title>
    <link href="http://www.qxyer.com/2018/04/26/hello-hexo/"/>
    <id>http://www.qxyer.com/2018/04/26/hello-hexo/</id>
    <published>2018-04-26T11:55:13.000Z</published>
    <updated>2018-04-27T08:00:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>为了记录西西妹的点点滴滴,当爹的准备再次发扬折腾精神,重新买域名,又把尘封多年的 blog 又重新用<a href="http://hexo.io">Hexo</a>部署,原本是打算等西西满月的时候就去给她拍照留念的,后来各种事情太多,又考虑到孩子太小,只能趟着拍,不好看.所以就充分发挥了拖延的优点,等半岁了才去拍.</p><p>小东西,笑啥呢?<br><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fqr9gnvbulj31kw2dc13w.jpg" alt=""><br>还在笑.<br><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fqr9glpkkwj31kw2dc1b1.jpg" alt=""><br>看到什么东西了,那么专注<br><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fqr9gjbr24j31kw11x16g.jpg" alt=""><br>我咬,我咬<br><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fqr9gh6l0nj31kw2dc1l3.jpg" alt=""><br>健个身吧<br><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fqr9ge4xinj31kw2dc18b.jpg" alt=""><br>开心的笑<br><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fqr9gbybjyj31kw11x7is.jpg" alt=""><br>这个我就有点蒙逼了<br><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fqr9g9ryu5j31kw11x1ej.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fqr9g7kvwkj31kw11x4k2.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fqr9g5dx9dj31kw11x7pq.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fqr9g33ep9j31kw11xe3o.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fqr9g0mko6j31kw2dcqvb.jpg" alt=""><br><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fqr9fwer4gj31kw11x7wo.jpg" alt=""><br><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fqr9fruu3gj31kw2dch2k.jpg" alt=""><br><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fqr9fpeegvj31kw2dckci.jpg" alt=""><br><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fqr9fmyrijj31kw2dcngc.jpg" alt=""><br><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fqr9fkjj4ej31kw2dcdxh.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fqr9fi457tj31kw2dch42.jpg" alt=""><br><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fqr9ffkc6sj31kw11xts3.jpg" alt=""></p><p>现在云相册和图床还没有确定下来(暂时考虑的是阿里OSS/七牛),暂时就这么传这么多,等图床搞定了再传其它的.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;为了记录西西妹的点点滴滴,当爹的准备再次发扬折腾精神,重新买域名,又把尘封多年的 blog 又重新用&lt;a href=&quot;http://hexo.io&quot;&gt;Hexo&lt;/a&gt;部署,原本是打算等西西满月的时候就去给她拍照留念的,后来各种事情太多,又考虑到孩子太小,只能趟着
      
    
    </summary>
    
    
      <category term="baby" scheme="http://www.qxyer.com/tags/baby/"/>
    
  </entry>
  
  <entry>
    <title>rake 0.9.2.2 vs 0.9.2版本不同报错解决</title>
    <link href="http://www.qxyer.com/2012/08/14/rake-0-dot-9-2-dot-2-vs-0-dot-9-2-error/"/>
    <id>http://www.qxyer.com/2012/08/14/rake-0-dot-9-2-dot-2-vs-0-dot-9-2-error/</id>
    <published>2012-08-14T05:58:00.000Z</published>
    <updated>2018-04-26T10:47:30.775Z</updated>
    
    <content type="html"><![CDATA[<p>You have already activated rake 0.9.2.2, but your Gemfile requires rake 0.9.2. Using bundle exec may solve this.</p><p>If you got rake error as following:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rake aborted!</span><br><span class="line">You have already activated rake 0.9.2.2, but your Gemfile requires rake 0.9.2. Using bundle <span class="built_in">exec</span> may solve this.</span><br><span class="line"></span><br><span class="line">(See full trace by running task with --trace)</span><br></pre></td></tr></table></figure></p><p>Using the following to resolve:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bundle update rake</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;You have already activated rake 0.9.2.2, but your Gemfile requires rake 0.9.2. Using bundle exec may solve this.&lt;/p&gt;
&lt;p&gt;If you got rake e
      
    
    </summary>
    
      <category term="gem" scheme="http://www.qxyer.com/categories/gem/"/>
    
      <category term="Octopress" scheme="http://www.qxyer.com/categories/gem/Octopress/"/>
    
    
  </entry>
  
  <entry>
    <title>Push源码到Github</title>
    <link href="http://www.qxyer.com/2012/08/14/push-source-to-github/"/>
    <id>http://www.qxyer.com/2012/08/14/push-source-to-github/</id>
    <published>2012-08-14T03:24:00.000Z</published>
    <updated>2018-04-26T10:47:30.775Z</updated>
    
    <content type="html"><![CDATA[<p>今天又把博客捣鼓了一下,终于可以把源码Push到Github上面了,之前的博客一直都只能在同一台电脑上面写,现在可以在不同的电脑上面写博客了.虽然现在还有点问题,但总算也是一个小小的成功吧,等什么时候有空了,再重新部署一下.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天又把博客捣鼓了一下,终于可以把源码Push到Github上面了,之前的博客一直都只能在同一台电脑上面写,现在可以在不同的电脑上面写博客了.虽然现在还有点问题,但总算也是一个小小的成功吧,等什么时候有空了,再重新部署一下.&lt;/p&gt;

      
    
    </summary>
    
      <category term="Octopress" scheme="http://www.qxyer.com/categories/Octopress/"/>
    
      <category term="Github" scheme="http://www.qxyer.com/categories/Octopress/Github/"/>
    
    
  </entry>
  
  <entry>
    <title>Delphi调用GlobalMemoryStatus获取内存信息</title>
    <link href="http://www.qxyer.com/2012/08/02/delphi-api-globalmemorystatus/"/>
    <id>http://www.qxyer.com/2012/08/02/delphi-api-globalmemorystatus/</id>
    <published>2012-08-02T07:12:00.000Z</published>
    <updated>2018-04-26T10:47:30.774Z</updated>
    
    <content type="html"><![CDATA[<p> 下面介绍一种方法可以获取系统内存的多少、使用状态等信息。更重要的是，应用程序可以利用这项技术来决定客户机的可用内存的大小，利用这些信息，应用程序可以动态地优化程序的性能。例如，如果有足够的内存可以利用双缓存优化位图的操作。利用Windows API函数<code>GlobalMemoryStatus</code>可以完成上述功能。</p><p><code>GlobalMemoryStatus</code>接收一个类型为<code>TMemoryStatus</code>的变参，通过这个参数就可以获得Windows当前的内存状态。<code>TMemoryStatus</code>的结构如下：</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">PMemoryStatus = ^TMemoryStatus;</span><br><span class="line">_MEMORYSTATUS = <span class="keyword">record</span></span><br><span class="line">  dwLength DWORD;                            <span class="comment">&#123; sizeof(MEMORYSTATUS)，该记录结构的大小&#125;</span></span><br><span class="line">  dwMemoryLoad DWORD;                   <span class="comment">&#123;使用内存所占百分比&#125;</span></span><br><span class="line">  dwTotalPhys DWORD;                        <span class="comment">&#123;全部物理内存字节数&#125;</span></span><br><span class="line">  dwAvailPhys DWORD;                         <span class="comment">&#123; 可用物理内存字节数&#125;</span></span><br><span class="line">  dwTotalPageFile DWORD;                   <span class="comment">&#123; 全部页文件字节数  &#125;</span></span><br><span class="line">  dwAvailPageFile DWORD;                   <span class="comment">&#123; 可用页文件字节数   &#125;</span></span><br><span class="line">  dwTotalVirtual DWORD;                      <span class="comment">&#123; 全部虚拟内存字节数&#125;</span></span><br><span class="line">  dwAvailVirtual DWORD;                       <span class="comment">&#123; 可用虚拟内存字节数&#125;</span></span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>调用方法:<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TForm1</span>.<span class="title">btn1Click</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  memoinfo : TMemoryStatus;</span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">   GlobalMemoryStatus(memoinfo);</span><br><span class="line">   <span class="keyword">with</span> mmo1.Lines <span class="keyword">do</span></span><br><span class="line">     <span class="keyword">begin</span></span><br><span class="line">       Add(Format(<span class="string">'Length:'</span> + <span class="string">#9#9</span> + <span class="string">'%d'</span> + <span class="string">'  Bytes'</span>,[memoinfo.dwLength]));</span><br><span class="line">       Add(Format(<span class="string">'MemoryLoad:'</span> + <span class="string">#9</span> + <span class="string">'%d'</span> ,[memoinfo.dwMemoryLoad]));</span><br><span class="line">       Add(Format(<span class="string">'TotalPhys:'</span> + <span class="string">#9</span> + <span class="string">'%d'</span> + <span class="string">'  Bytes'</span>,[memoinfo.dwTotalPhys]));</span><br><span class="line">       Add(Format(<span class="string">'AvailPhys:'</span> + <span class="string">#9</span> + <span class="string">'%d'</span> + <span class="string">'  Bytes'</span>,[memoinfo.dwAvailPhys]));</span><br><span class="line">       Add(Format(<span class="string">'TotalPageFile:'</span> + <span class="string">#9</span> + <span class="string">'%d'</span> + <span class="string">'  Bytes'</span>,[memoinfo.dwTotalPageFile]));</span><br><span class="line">       Add(Format(<span class="string">'AvailPageFile:'</span> + <span class="string">#9</span> + <span class="string">'%d'</span> + <span class="string">'  Bytes'</span>,[memoinfo.dwAvailPageFile]));</span><br><span class="line">       Add(Format(<span class="string">'TotalVirtual:'</span> + <span class="string">#9</span> + <span class="string">'%d'</span> + <span class="string">'  Bytes'</span>,[memoinfo.dwTotalVirtual]));</span><br><span class="line">       Add(Format(<span class="string">'AvailVirtual:'</span> + <span class="string">#9</span> + <span class="string">'%d'</span> + <span class="string">'  Bytes'</span>,[memoinfo.dwAvailVirtual]));</span><br><span class="line">     <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure></p><p>上面这个方法一般情况下针对一根内存条获取的信息是正常的(win7 64bit/XP+delphi7)下测试正常,但是如果一台电脑里面有两根或以上内存的话,那就只能取出一根内存的信息出来,所以我们只好调用<code>GlobalMemoryStatusEx</code>这个API来实现了.</p><a id="more"></a><p>函数定义:<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span></span><br><span class="line">DWORDLONG = UInt64;</span><br><span class="line"></span><br><span class="line">TMemoryStatusEx = <span class="keyword">packed</span> <span class="keyword">record</span></span><br><span class="line">  dwLength: DWORD;</span><br><span class="line">  dwMemoryLoad: DWORD;</span><br><span class="line">  ullTotalPhys: DWORDLONG;</span><br><span class="line">  ullAvailPhys: DWORDLONG;</span><br><span class="line">  ullTotalPageFile: DWORDLONG;</span><br><span class="line">  ullAvailPageFile: DWORDLONG;</span><br><span class="line">  ullTotalVirtual: DWORDLONG;</span><br><span class="line">  ullAvailVirtual: DWORDLONG;</span><br><span class="line">  ullAvailExtendedVirtual: DWORDLONG;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">PMemoryStatusEx = ^TMemoryStatusEx;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GlobalMemoryStatusEx</span><span class="params">(<span class="keyword">var</span> lpBuffer: TMemoryStatusEx)</span>:</span> BOOL; <span class="keyword">stdcall</span>; <span class="keyword">external</span> kernel32;</span><br></pre></td></tr></table></figure></p><p>调用方法:<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TForm1</span>.<span class="title">btn1Click</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  memoinfo : TMemoryStatus;</span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">   GlobalMemoryStatus(memoinfo);</span><br><span class="line">   <span class="keyword">with</span> mmo1.Lines <span class="keyword">do</span></span><br><span class="line">     <span class="keyword">begin</span></span><br><span class="line">       Add(Format(<span class="string">'Length:'</span> + <span class="string">#9#9</span> + <span class="string">'%d'</span> + <span class="string">'  Bytes'</span>,[memoinfo.dwLength]));</span><br><span class="line">       Add(Format(<span class="string">'MemoryLoad:'</span> + <span class="string">#9</span> + <span class="string">'%d'</span> ,[memoinfo.dwMemoryLoad]));</span><br><span class="line">       Add(Format(<span class="string">'TotalPhys:'</span> + <span class="string">#9</span> + <span class="string">'%d'</span> + <span class="string">'  Bytes'</span>,[memoinfo.ulTotalPhys]));</span><br><span class="line">       Add(Format(<span class="string">'AvailPhys:'</span> + <span class="string">#9</span> + <span class="string">'%d'</span> + <span class="string">'  Bytes'</span>,[memoinfo.ulAvailPhys]));</span><br><span class="line">       Add(Format(<span class="string">'TotalPageFile:'</span> + <span class="string">#9</span> + <span class="string">'%d'</span> + <span class="string">'  Bytes'</span>,[memoinfo.ulTotalPageFile]));</span><br><span class="line">       Add(Format(<span class="string">'AvailPageFile:'</span> + <span class="string">#9</span> + <span class="string">'%d'</span> + <span class="string">'  Bytes'</span>,[memoinfo.ulAvailPageFile]));</span><br><span class="line">       Add(Format(<span class="string">'TotalVirtual:'</span> + <span class="string">#9</span> + <span class="string">'%d'</span> + <span class="string">'  Bytes'</span>,[memoinfo.ulTotalVirtual]));</span><br><span class="line">       Add(Format(<span class="string">'AvailVirtual:'</span> + <span class="string">#9</span> + <span class="string">'%d'</span> + <span class="string">'  Bytes'</span>,[memoinfo.ulAvailVirtual]));</span><br><span class="line">     <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 下面介绍一种方法可以获取系统内存的多少、使用状态等信息。更重要的是，应用程序可以利用这项技术来决定客户机的可用内存的大小，利用这些信息，应用程序可以动态地优化程序的性能。例如，如果有足够的内存可以利用双缓存优化位图的操作。利用Windows API函数&lt;code&gt;GlobalMemoryStatus&lt;/code&gt;可以完成上述功能。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GlobalMemoryStatus&lt;/code&gt;接收一个类型为&lt;code&gt;TMemoryStatus&lt;/code&gt;的变参，通过这个参数就可以获得Windows当前的内存状态。&lt;code&gt;TMemoryStatus&lt;/code&gt;的结构如下：&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;PMemoryStatus = ^TMemoryStatus;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_MEMORYSTATUS = &lt;span class=&quot;keyword&quot;&gt;record&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dwLength DWORD;                            &lt;span class=&quot;comment&quot;&gt;&amp;#123; sizeof(MEMORYSTATUS)，该记录结构的大小&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dwMemoryLoad DWORD;                   &lt;span class=&quot;comment&quot;&gt;&amp;#123;使用内存所占百分比&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dwTotalPhys DWORD;                        &lt;span class=&quot;comment&quot;&gt;&amp;#123;全部物理内存字节数&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dwAvailPhys DWORD;                         &lt;span class=&quot;comment&quot;&gt;&amp;#123; 可用物理内存字节数&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dwTotalPageFile DWORD;                   &lt;span class=&quot;comment&quot;&gt;&amp;#123; 全部页文件字节数  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dwAvailPageFile DWORD;                   &lt;span class=&quot;comment&quot;&gt;&amp;#123; 可用页文件字节数   &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dwTotalVirtual DWORD;                      &lt;span class=&quot;comment&quot;&gt;&amp;#123; 全部虚拟内存字节数&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dwAvailVirtual DWORD;                       &lt;span class=&quot;comment&quot;&gt;&amp;#123; 可用虚拟内存字节数&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;调用方法:&lt;br&gt;&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;procedure&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TForm1&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;btn1Click&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Sender: TObject)&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  memoinfo : TMemoryStatus;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   GlobalMemoryStatus(memoinfo);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; mmo1.Lines &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Add(Format(&lt;span class=&quot;string&quot;&gt;&#39;Length:&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;#9#9&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;%d&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;  Bytes&#39;&lt;/span&gt;,[memoinfo.dwLength]));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Add(Format(&lt;span class=&quot;string&quot;&gt;&#39;MemoryLoad:&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;#9&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;%d&#39;&lt;/span&gt; ,[memoinfo.dwMemoryLoad]));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Add(Format(&lt;span class=&quot;string&quot;&gt;&#39;TotalPhys:&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;#9&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;%d&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;  Bytes&#39;&lt;/span&gt;,[memoinfo.dwTotalPhys]));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Add(Format(&lt;span class=&quot;string&quot;&gt;&#39;AvailPhys:&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;#9&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;%d&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;  Bytes&#39;&lt;/span&gt;,[memoinfo.dwAvailPhys]));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Add(Format(&lt;span class=&quot;string&quot;&gt;&#39;TotalPageFile:&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;#9&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;%d&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;  Bytes&#39;&lt;/span&gt;,[memoinfo.dwTotalPageFile]));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Add(Format(&lt;span class=&quot;string&quot;&gt;&#39;AvailPageFile:&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;#9&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;%d&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;  Bytes&#39;&lt;/span&gt;,[memoinfo.dwAvailPageFile]));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Add(Format(&lt;span class=&quot;string&quot;&gt;&#39;TotalVirtual:&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;#9&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;%d&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;  Bytes&#39;&lt;/span&gt;,[memoinfo.dwTotalVirtual]));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Add(Format(&lt;span class=&quot;string&quot;&gt;&#39;AvailVirtual:&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;#9&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;%d&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;  Bytes&#39;&lt;/span&gt;,[memoinfo.dwAvailVirtual]));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面这个方法一般情况下针对一根内存条获取的信息是正常的(win7 64bit/XP+delphi7)下测试正常,但是如果一台电脑里面有两根或以上内存的话,那就只能取出一根内存的信息出来,所以我们只好调用&lt;code&gt;GlobalMemoryStatusEx&lt;/code&gt;这个API来实现了.&lt;/p&gt;
    
    </summary>
    
      <category term="Delphi" scheme="http://www.qxyer.com/categories/Delphi/"/>
    
      <category term="API" scheme="http://www.qxyer.com/categories/Delphi/API/"/>
    
    
  </entry>
  
  <entry>
    <title>一分钟学会Git</title>
    <link href="http://www.qxyer.com/2012/08/02/git-order-one-min/"/>
    <id>http://www.qxyer.com/2012/08/02/git-order-one-min/</id>
    <published>2012-08-02T02:29:00.000Z</published>
    <updated>2018-04-26T10:47:30.774Z</updated>
    
    <content type="html"><![CDATA[<p></p><p>流程：取代码 → 每次工作前更新代码到最新版本 → 修改代码  → 提交代码到服务器</p><p></p><p></p><h3>取代码及修改全局设置</h3><p></p><p></p><p>设置用户名与邮箱</p><p></p><pre lang="ruby" line="1">git config --global user.name "My Name"git config --global user.email "my@email.com"</pre><p>从已有的git库中提取代码</p><pre lang="ruby" line="1">git clone git@server:app.git myrepo</pre><h3>每次更改代码的操作</h3><p>更新本地代码到最新版本（需要merge才能合到本地代码中）</p><pre lang="ruby" line="1">git fetch</pre><p>合并更新后的代码到本地</p><pre lang="ruby" line="1">git merge</pre><p>更新代码方式的另一种方法(git pull是git fetch和git merge命令的一个组合)</p><pre lang="ruby" line="1">git pull</pre><p>修改代码后，查看已修改的内容</p><pre lang="ruby" line="1">git diff --cached</pre><p>将新增加文件加入到git中</p><pre lang="ruby" line="1">git add file1 file2 file3</pre><p>从git中删除文件</p><pre lang="ruby" line="1">git rm file1git rm -r dir1</pre><p>提交修改</p><pre lang="ruby" line="1">git commit -m 'this is memo'</pre><a id="more"></a><p></p><p>如果想省掉提交之前的 git add 命令，可以直接用</p><p></p><pre lang="ruby" line="1">git commit -a -m 'this is memo'</pre><blockquote><p>commit和commit -a的区别, commit -a相当于：</p></blockquote><ul>    <li>第一步：自动地add所有改动的代码，使得所有的开发代码都列于index file中</li></ul><ul>    <li>第二步：自动地删除那些在index file中但不在工作树中的文件</li></ul><ul>    <li>第三步：执行commit命令来提交</li></ul><p>提交所有修改到远程服务器，这样，其它团队成员才能更新到这些修改</p><pre lang="ruby" line="1">git push</pre><hr><h3>其它常用命令</h3><p>显示commit日志</p><pre lang="ruby" line="1">git log</pre><p>不仅显示commit日志，而且同时显示每次commit的代码改变。</p><pre lang="ruby" line="1">git log -p</pre><p>回滚代码：</p><pre lang="ruby" line="1">git revert HEAD</pre><p>你也可以revert更早的commit，例如：</p><pre lang="ruby" line="1">git revert HEAD^</pre><p>销毁自己的修改</p><pre lang="ruby" line="1">git reset --hard</pre><p>查看最新版本和上一个版本的差异(一个^表示向前推进一个版本)</p><pre lang="ruby" line="1">git diff HEAD HEAD^</pre><p>将branchname分支合并到当前分支中。(如果合并发生冲突，需要自己解决冲突)</p><pre lang="ruby" line="1">git merge branchname</pre><p>解决冲突</p><blockquote><p>当merge命令自身无法解决冲突的时候，它会将工作树置于一种特殊的状态，并且给用户提供冲突信息，以期用户可以自己解决这些问题。当然在这个时候，未发生冲突的代码已经被git merge登记在了index file里了。如果你这个时候使用git diff，显示出来的只是发生冲突的代码信息。</p></blockquote><blockquote><p>在你解决了冲突之前，发生冲突的文件会一直在index file中被标记出来。这个时候，如果你使用git commit提交的话，git会提示：filename.txt needs merge</p></blockquote><blockquote><p>在发生冲突的时候，如果你使用git status命令，那么会显示出发生冲突的具体信息。</p></blockquote><p>在你解决了冲突之后，你可以使用如下步骤来提交：</p><p>第一步(如果需要增加文件)：</p><pre lang="ruby" line="1">git add file1</pre><p>第二步：</p><pre lang="ruby" line="1">git commit</pre><h3>git恢复删除了的文件</h3><p>git pull 从git服务器取出，并且和本地修改merge， 类似于SVN up，但是对删除的文件不管用，恢复删除文件用</p><pre lang="ruby" line="1">git checkout -f</pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p&gt;流程：取代码 → 每次工作前更新代码到最新版本 → 修改代码  → 提交代码到服务器&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h3&gt;取代码及修改全局设置&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;设置用户名与邮箱&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot; line=&quot;1&quot;&gt;
git config --global user.name &quot;My Name&quot;
git config --global user.email &quot;my@email.com&quot;
&lt;/pre&gt;
&lt;p&gt;从已有的git库中提取代码&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot; line=&quot;1&quot;&gt;
git clone git@server:app.git myrepo
&lt;/pre&gt;
&lt;h3&gt;每次更改代码的操作&lt;/h3&gt;
&lt;p&gt;更新本地代码到最新版本（需要merge才能合到本地代码中）&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot; line=&quot;1&quot;&gt;
git fetch
&lt;/pre&gt;
&lt;p&gt;合并更新后的代码到本地&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot; line=&quot;1&quot;&gt;
git merge
&lt;/pre&gt;
&lt;p&gt;更新代码方式的另一种方法(git pull是git fetch和git merge命令的一个组合)&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot; line=&quot;1&quot;&gt;
git pull
&lt;/pre&gt;
&lt;p&gt;修改代码后，查看已修改的内容&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot; line=&quot;1&quot;&gt;
git diff --cached
&lt;/pre&gt;
&lt;p&gt;将新增加文件加入到git中&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot; line=&quot;1&quot;&gt;
git add file1 file2 file3
&lt;/pre&gt;
&lt;p&gt;从git中删除文件&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot; line=&quot;1&quot;&gt;
git rm file1
git rm -r dir1
&lt;/pre&gt;
&lt;p&gt;提交修改&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot; line=&quot;1&quot;&gt;
git commit -m &#39;this is memo&#39;
&lt;/pre&gt;
    
    </summary>
    
      <category term="Github" scheme="http://www.qxyer.com/categories/Github/"/>
    
      <category term="Octopress" scheme="http://www.qxyer.com/categories/Github/Octopress/"/>
    
    
  </entry>
  
  <entry>
    <title>Git常用操作命令收集</title>
    <link href="http://www.qxyer.com/2012/07/31/git-order/"/>
    <id>http://www.qxyer.com/2012/07/31/git-order/</id>
    <published>2012-07-31T09:14:00.000Z</published>
    <updated>2018-04-26T10:47:30.774Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间把博客转到<a href="http://www.github.com" target="_blank" rel="noopener">Github</a>上面去了,但是Source一直没有备份上去(技术问题),只能手动备份.这么久时不时的要找在Ubuntu的虚拟机上面去玩玩git,写写blog.无奈对那些命令还是不太熟悉,于是发扬好记性不如烂笔头的优良传统,把这些命令记下来.</p><p></p><p><strong><span class="caps">CONFIGURE</span></strong></p><p></p><ul><br>    <li>标识你自己：电子邮件和名字：</li><br></ul><br><pre lang="ruby" line="1"><br>git config –global user.name “David Beckwith”<br><br>git config –global user.email “<a href="mailto:dbitsolutions@gmail.com" target="_blank" rel="noopener">dbitsolutions@gmail.com</a>“<br></pre><br><ul><br>    <li>看所有用户：</li><br></ul><br><pre lang="ruby" line="1"><br>git config –list<br></pre><br><p>或者</p><br><pre lang="ruby" line="1"><br>cat .gitconfig<br></pre><br><ul><br>    <li>设置别名 <em></em></li><br></ul><br><pre lang="ruby" line="1"><br>git config –global alias.co checkout<br></pre><br><ul><br>    <li>查看你的配置 </li><br></ul><br><pre lang="ruby" line="1"><br>cat .gitconfig<br></pre><br><ul><br>    <li>去忽略空白 (Ruby is whitespace insensitive)</li><br></ul><br><pre lang="ruby" line="1"><br>git config –global apply.whitespace nowarn<br></pre><br><ul><br>    <li>Some nice aliases:</li><br></ul><br><pre lang="bash" line="1"><br>gb = git branch<br>gba = git branch -a<br>gc = git commit -v<br>gd = git diff | mate<br>gl = git pull<br>gp = git push<br>gst = git status<br></pre><br><ul><br>    <li><span class="caps">START</span> <span class="caps">USING</span> <span class="caps">GIT</span> <em></em></li><br></ul><br><pre lang="ruby" line="1"><br>git init<br></pre><br><ul><br>    <li>TO <span class="caps">IGNORE</span> <span class="caps">SOME</span> <span class="caps">FILES</span> </li><br></ul><a id="more"></a><p></p><p>在根目录下增加一个叫 .gitignore 的文件，并且增加你想ignore的文件：</p><p></p><pre lang="ruby" line="1">*.logdb/schema.rbdb/schema.sql</pre><p>Git自动ignore空目录。如果你想包含log目录，但是想ignore里面的所有文件，首先在.gitignore文件里加log/* , 然后在这个空目录下再添加一个空的 .gitignore 文件。</p><pre lang="ruby" line="1">touch log/.gitignore</pre><ul>    <li>add新文件以及所有change到git index *</li></ul><pre lang="ruby" line="1">git add .</pre><ul>    <li>看状态 *</li></ul><pre lang="ruby" line="1">git status</pre><ul>    <li>提交 *</li></ul><pre lang="ruby" line="1">git commit -m "First import"</pre><ul>    <li>看已经被提交的 *</li></ul><pre lang="ruby" line="1">git ls-files</pre><ul>    <li>删除一个文件 *</li></ul><pre lang="ruby" line="1">git rm [file name]</pre><ul>    <li>提交当前repos的所有的改变 *</li></ul><pre lang="ruby" line="1">git commit -a</pre><ul>    <li>添加一个文件到git index *</li></ul><pre lang="ruby" line="1">git add [file name]</pre><ul>    <li>当你用－v参数的时候可以看commit的差异 *</li></ul><pre lang="ruby" line="1">git commit -v</pre><ul>    <li>添加commit信息 *</li></ul><pre lang="ruby" line="1">git commit -m "This is the message describing the commit"</pre><ul>    <li>－a是代表add，把所有的change加到git index里然后再commit *</li></ul><pre lang="ruby" line="1">git commit -a</pre><ul>    <li>一般提交命令: *</li></ul><pre lang="ruby" line="1">git commit -a -v</pre><ul>    <li>看你commit的日志 *</li></ul><pre lang="ruby" line="1">git log</pre><ul>    <li>TO <span class="caps">VIEW</span> A <span class="caps">LOG</span> OF <span class="caps">YOUR</span> <span class="caps">COMMITS</span> <span class="caps">WITH</span> A <span class="caps">GRAPH</span> TO <span class="caps">SHOW</span> <span class="caps">THE</span> <span class="caps">EXTENT</span> OF <span class="caps">THE</span> <span class="caps">CHANGES</span> *</li></ul><pre lang="ruby" line="1">git log --stat</pre><ul>    <li>TO <span class="caps">HAVE</span> <span class="caps">PAGINATION</span> <span class="caps">WHEN</span> <span class="caps">VIEWING</span> <span class="caps">THE</span> <span class="caps">LOG</span> <span class="caps">FILE</span> <span class="caps">USE</span> <span class="caps">THE</span> -v <span class="caps">OPTION</span> *</li></ul><pre lang="ruby" line="1">git log -v</pre><ul>    <li>TO <span class="caps">VISUALIZE</span> <span class="caps">YOUR</span> <span class="caps">CHANGES</span> *</li></ul><pre lang="ruby" line="1">gitk --all</pre><ul>    <li>TO <span class="caps">CREATE</span> A <span class="caps">NEW</span> <span class="caps">BRANCH</span> *</li></ul><pre lang="ruby" line="1">git branch [name of your new branch]</pre><ul>    <li>TO <span class="caps">VIEW</span> <span class="caps">ALL</span> OF <span class="caps">THE</span> <span class="caps">EXISTING</span> <span class="caps">BRANCHES</span> *</li></ul><pre lang="ruby" line="1">git branch</pre><ul>    <li>TO <span class="caps">VIEW</span> A <span class="caps">LIST</span> OF <span class="caps">ALL</span> <span class="caps">BRANCHES</span> *</li></ul><pre lang="ruby" line="1">git branch -a</pre><ul>    <li>TO <span class="caps">SWITCH</span> TO <span class="caps">ANOTHER</span> <span class="caps">BRANCH</span> *</li></ul><p>The state of your file system will change after executing this command.</p><pre lang="ruby" line="1">git checkout [name of the branch you want to switch to]</pre><p>OR</p><pre lang="ruby" line="1">git co [name of the branch you want to switch to]</pre><ul>    <li>TO <span class="caps">MAKE</span> <span class="caps">SURE</span> <span class="caps">THAT</span> <span class="caps">YOUR</span> <span class="caps">NEW</span> <span class="caps">BRANCH</span> <span class="caps">GETS</span> <span class="caps">CHANGES</span> <span class="caps">FROM</span> <span class="caps">THE</span> <span class="caps">MASTER</span> <span class="caps">BRANCH</span> (<span class="caps">WHERE</span> <span class="caps">EVERYBODY</span> <span class="caps">ELSE</span> IS <span class="caps">WORKING</span>) <span class="caps">USE</span> <span class="caps">THE</span> <span class="caps">REBASE</span> <span class="caps">COMMAND</span> *</li></ul><pre lang="ruby" line="1">git rebase master</pre><ul>    <li>TO <span class="caps">MERGE</span> <span class="caps">YOUR</span> <span class="caps">NEW</span> <span class="caps">BRANCH</span> <span class="caps">INTO</span> <span class="caps">THE</span> <span class="caps">MASTER</span> <span class="caps">BRANCH</span> *</li></ul><p>First, switch back to the master branch:</p><pre lang="ruby" line="1">git co master</pre><p>Check to see what changes you’re about to merge together, compare the two branches:</p><pre lang="ruby" line="1">git diff master xyz</pre><p>If you’re in a branch that’s not the xyz branch and want to merge the xyz branch into it:</p><pre lang="ruby" line="1">git merge xyz</pre><ul>    <li>TO <span class="caps">REVERT</span> <span class="caps">YOUR</span> <span class="caps">CHANGES</span> to before the merge. *</li></ul><pre lang="ruby" line="1">git reset --hard ORIG_HEAD</pre><ul>    <li>TO <span class="caps">RESOLVE</span> <span class="caps">CONFLICTS</span> just edit your file. *</li></ul><p>Remove the markings, add the file, then commit.</p><ul>    <li>TO <span class="caps">CREATE</span> A <span class="caps">BRANCH</span> <span class="caps">AND</span> <span class="caps">SWITCH</span> TO <span class="caps">THE</span> <span class="caps">BRANCH</span> IN <span class="caps">ONE</span> <span class="caps">MOVE</span>: *</li></ul><pre lang="ruby" line="1">git checkout -b [name of new branch]</pre><ul>    <li>TO <span class="caps">CREATE</span> A “CLIPBOARD” or “STASH” OF <span class="caps">CHANGES</span> <span class="caps">THAT</span> <span class="caps">ARE</span> <span class="caps">NOT</span> <span class="caps">YET</span> <span class="caps">COMMITED</span> (SO <span class="caps">THAT</span> <span class="caps">YOU</span> <span class="caps">CAN</span> <span class="caps">SWITCH</span> TO <span class="caps">ANOTHER</span> <span class="caps">BRANCH</span> IN <span class="caps">THE</span> <span class="caps">MIDDLE</span> OF <span class="caps">YOUR</span> <span class="caps">CHANGES</span>.), <span class="caps">CREATE</span> A <span class="caps">STASH</span>.*</li></ul><pre lang="ruby" line="1">git stash "Put a message here to remind you of what you're saving to the clipboard"</pre><ul>    <li>TO <span class="caps">SWITCH</span> <span class="caps">AWAY</span> <span class="caps">FROM</span> <span class="caps">THE</span> <span class="caps">CURRENT</span> <span class="caps">BRANCH</span> *</li></ul><pre lang="ruby" line="1">git co [branch you want to switch to]</pre><ul>    <li>Do whatever Then switch back to the stashed branch *</li></ul><pre lang="ruby" line="1">git co [the stashed branch]</pre><ul>    <li>TO <span class="caps">VIEW</span> <span class="caps">THE</span> <span class="caps">LIST</span> OF <span class="caps">STASHES</span> *</li></ul><pre lang="ruby" line="1">git stash list</pre><ul>    <li>TO <span class="caps">LOAD</span> <span class="caps">BACK</span> <span class="caps">THE</span> “CLIPBOARD” OR “STASH” *</li></ul><pre lang="ruby" line="1">git stash apply</pre><p>Now you can continue to work where you were previously.</p><ul>    <li>TO <span class="caps">DELETE</span> A <span class="caps">BRANCH</span> <span class="caps">THAT</span> IS <span class="caps">NOT</span> <span class="caps">USED</span> <span class="caps">ANYMORE</span>, but already merged into the current branch. (TO <span class="caps">CLEAN</span> UP)*</li></ul><pre lang="ruby" line="1">git branch -d [name of branch you want to delete]</pre><ul>    <li>TO <span class="caps">DELETE</span> AN <span class="caps">UNMERGED</span> <span class="caps">BRANCH</span> *</li></ul><pre lang="ruby" line="1">git branch -D [name of branch you want to delete]</pre><ul>    <li>TO <span class="caps">DELETE</span> <span class="caps">THE</span> <span class="caps">STASH</span>. (<span class="caps">ERASE</span> <span class="caps">THE</span> “CLIPBOARD” <span class="caps">FROM</span> <span class="caps">MEMORY</span>)*</li></ul><pre lang="ruby" line="1">git stash clear</pre><ul>    <li>TO <span class="caps">SET</span> UP <span class="caps">YOUR</span> <span class="caps">REPOSITORY</span> <span class="caps">FOR</span> <span class="caps">SHARING</span> ON A <span class="caps">CENTRAL</span> <span class="caps">SERVER</span> *</li></ul><p>Copy up your repository. e.g.:</p><pre lang="ruby" line="1">scp -r my_project deploy@yourbox.com:my_project</pre><p>Move your files on the remote server to /var/git/my_project For security make the owner of this project git On the repository server:</p><pre lang="ruby" line="1">sudo chown -R git:git my_project</pre><p>Then (for security) restrict the “deploy” user to doing git-related things in /etc/passwd with a git-shell.</p><ul>    <li>TO <span class="caps">CHECK</span> <span class="caps">OUT</span> <span class="caps">THE</span> <span class="caps">GIT</span> <span class="caps">REPOSITORY</span> TO <span class="caps">YOUR</span> <span class="caps">LOCALHOST</span>. ON <span class="caps">YOUR</span> <span class="caps">LOCAL</span> <span class="caps">HOST</span> DO <span class="caps">THIS</span>:*</li></ul><pre lang="ruby" line="1">git clone git@yourbox.com:/var/git/my_project</pre><ul>    <li>TO <span class="caps">SEE</span> <span class="caps">SOME</span> <span class="caps">INFO</span> <span class="caps">ABOUT</span> <span class="caps">THE</span> <span class="caps">REPOSITORY</span> <span class="caps">THAT</span> <span class="caps">WILL</span> <span class="caps">TELL</span> <span class="caps">YOU</span> <span class="caps">WHICH</span> <span class="caps">REPOSITORY</span> IS <span class="caps">THE</span> <span class="caps">MASTER</span> <span class="caps">AND</span> <span class="caps">WHICH</span> IS <span class="caps">THE</span> <span class="caps">SLAVE</span>:*</li></ul><pre lang="ruby" line="1">cat .git/config</pre><p>By virtue of having cloned the remote repository, your local repository becomes the slave and will track and synchronize with the remote master branch.</p><ul>    <li>TO <span class="caps">UPDATE</span> <span class="caps">YOUR</span> <span class="caps">LOCAL</span> <span class="caps">BRANCH</span> <span class="caps">FROM</span> <span class="caps">THE</span> <span class="caps">REMOTE</span> <span class="caps">SERVER</span>: *</li></ul><pre lang="ruby" line="1">git pull</pre><ul>    <li>TO <span class="caps">GET</span> A <span class="caps">COPY</span> OF <span class="caps">THE</span> <span class="caps">ENTIRE</span> <span class="caps">REMOTE</span> <span class="caps">REPOSITORY</span> (e.g. a repository named “laptop”) <span class="caps">WITHOUT</span> <span class="caps">MERGING</span> <span class="caps">THEM</span> <span class="caps">INTO</span> <span class="caps">YOUR</span> <span class="caps">LOCAL</span> <span class="caps">BRANCHES</span> <span class="caps">USE</span> FETCH*</li></ul><pre lang="ruby" line="1">git fetch laptop</pre><ul>    <li>TO <span class="caps">MERGE</span> <span class="caps">TWO</span> <span class="caps">LOCAL</span> <span class="caps">BRANCHES</span> (ie. your local xyz branch with your local master branch) <span class="caps">USE</span> <span class="caps">MERGE</span> *</li></ul><pre lang="ruby" line="1">git merge laptop/xyz</pre><p>This merged the (already copied laptop repository’s xyz branch) with the current branch you’re sitting in.</p><ul>    <li>TO <span class="caps">MERGE</span> <span class="caps">THE</span> <span class="caps">REMOTE</span> <span class="caps">BRANCH</span> <span class="caps">WITH</span> <span class="caps">YOUR</span> <span class="caps">LOCAL</span> <span class="caps">BRANCH</span> <span class="caps">THAT</span> <span class="caps">YOU</span> <span class="caps">ARE</span> <span class="caps">SITTING</span> IN <span class="caps">USE</span> <span class="caps">PULL</span><br>TO <span class="caps">ADD</span> <span class="caps">LOCAL</span> <span class="caps">KNOWLEDGE</span> (TO <span class="caps">YOUR</span> <span class="caps">LOCAL</span> <span class="caps">REPOSITORY</span>) OF A 2ND <span class="caps">REMOTE</span> <span class="caps">REPOSITORY</span>, <span class="caps">LIKE</span> <span class="caps">YOUR</span> LAPTOP*</li></ul><pre lang="ruby" line="1">git remote add laptop duo2book.local:repos/m_project</pre><p>where ’’‘laptop’’” is the name of the remote repository and ”’‘duo2book.local’’” is the name of the remote machine.</p><ul>    <li>TO <span class="caps">VIEW</span> <span class="caps">META</span> <span class="caps">INFORMATION</span> <span class="caps">ABOUT</span> <span class="caps">THAT</span> <span class="caps">REMOTE</span> <span class="caps">REPOSITORY</span> *</li></ul><pre lang="ruby" line="1">git remote show laptop</pre><ul>    <li>TO <span class="caps">PUSH</span> A <span class="caps">COMMITTED</span> <span class="caps">LOCAL</span> <span class="caps">CHANGE</span> OF <span class="caps">THE</span> xyz <span class="caps">BRANCH</span> TO <span class="caps">THE</span> <span class="caps">REMOTE</span> laptop <span class="caps">BRANCH</span> *</li></ul><pre lang="ruby" line="1">git push laptop xyz</pre><p>*TO <span class="caps">CREATE</span> A <span class="caps">TRACKING</span> <span class="caps">BRANCH</span> (A <span class="caps">SLAVE</span> <span class="caps">BRANCH</span>). * Ie. to link a local branch to a remote branch:</p><pre lang="ruby" line="1">git branch --track local_branch remote_branch</pre><ul>    <li><span class="caps">NOW</span> IF YOU’RE <span class="caps">SITTING</span> IN <span class="caps">THE</span> <span class="caps">LOCAL</span> <span class="caps">TRACKING</span> <span class="caps">BRANCH</span>, TO <span class="caps">PULL</span> <span class="caps">YOU</span> DON’T <span class="caps">NEED</span> TO <span class="caps">SPECIFY</span> <span class="caps">THE</span> <span class="caps">REMOTE</span> <span class="caps">TRACKING</span> <span class="caps">BRANCH</span>:*</li></ul><pre lang="ruby" line="1">git  pull</pre><p>Note: You can track(link) different local branches to different remote machines. For example, you can track your friend’s “upgrade” branch with your “bobs_upgrade” branch, and simultaneously you can track the origin’s “master” branch (of your main webserver) with your local “master” branch.</p><p>By convention, ‘origin’ is the local name given to the remote centralized server which is the way <span class="caps">SVN</span> is usually set up on a remote server.</p><ul>    <li>TO <span class="caps">SEE</span> <span class="caps">WHICH</span> <span class="caps">LOCAL</span> <span class="caps">BRANCHES</span> <span class="caps">ARE</span> <span class="caps">TRACKING</span> A <span class="caps">REMOTE</span> <span class="caps">BRANCH</span>:*</li></ul><pre lang="ruby" line="1">git remote show origin</pre><p><strong>TO <span class="caps">WORK</span> <span class="caps">WITH</span> AN <span class="caps">SVN</span> <span class="caps">REPOSITORY</span> <span class="caps">BUT</span> <span class="caps">WORK</span> <span class="caps">WITH</span> <span class="caps">GIT</span> <span class="caps">LOCALLY</span>:</strong></p><pre lang="ruby" line="1">git-svn clone [http location of an svn repository]</pre><p><strong>Now you can work with the checked out directory as though it was a git repository. (cuz it is)<br>TO <span class="caps">PUSH</span> (<span class="caps">COMMIT</span>) <span class="caps">CHANGES</span> TO <span class="caps">THE</span> <span class="caps">REMOTE</span> <span class="caps">SERVER</span></strong></p><pre lang="ruby" line="1">git-svn dcommit</pre><ul>    <li>TO <span class="caps">UPDATE</span> <span class="caps">YOUR</span> <span class="caps">LOCAL</span> <span class="caps">REPOSITORY</span> <span class="caps">FROM</span> <span class="caps">THE</span> <span class="caps">SVN</span> REPOSITORY*</li></ul><pre lang="ruby" line="1">git-svn rebase</pre><p><span class="caps">NOTE</span>: make sure you have your perl bindings to your local svn installation.<br>I screwed up, how do I reset my checkout?</p><pre lang="ruby" line="1">git checkout -f</pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前段时间把博客转到&lt;a href=&quot;http://www.github.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github&lt;/a&gt;上面去了,但是Source一直没有备份上去(技术问题),只能手动备份.这么久时不时的要找在Ubuntu的虚拟机上面去玩玩git,写写blog.无奈对那些命令还是不太熟悉,于是发扬好记性不如烂笔头的优良传统,把这些命令记下来.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span class=&quot;caps&quot;&gt;CONFIGURE&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
&lt;ul&gt;&lt;br&gt;    &lt;li&gt;标识你自己：电子邮件和名字：&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;br&gt;&lt;pre lang=&quot;ruby&quot; line=&quot;1&quot;&gt;&lt;br&gt;git config –global user.name “David Beckwith”&lt;br&gt;&lt;br&gt;git config –global user.email “&lt;a href=&quot;mailto:dbitsolutions@gmail.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;dbitsolutions@gmail.com&lt;/a&gt;“&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;ul&gt;&lt;br&gt;    &lt;li&gt;看所有用户：&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;br&gt;&lt;pre lang=&quot;ruby&quot; line=&quot;1&quot;&gt;&lt;br&gt;git config –list&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;p&gt;或者&lt;/p&gt;&lt;br&gt;&lt;pre lang=&quot;ruby&quot; line=&quot;1&quot;&gt;&lt;br&gt;cat .gitconfig&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;ul&gt;&lt;br&gt;    &lt;li&gt;设置别名 &lt;em&gt;&lt;/em&gt;&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;br&gt;&lt;pre lang=&quot;ruby&quot; line=&quot;1&quot;&gt;&lt;br&gt;git config –global alias.co checkout&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;ul&gt;&lt;br&gt;    &lt;li&gt;查看你的配置 &lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;br&gt;&lt;pre lang=&quot;ruby&quot; line=&quot;1&quot;&gt;&lt;br&gt;cat .gitconfig&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;ul&gt;&lt;br&gt;    &lt;li&gt;去忽略空白 (Ruby is whitespace insensitive)&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;br&gt;&lt;pre lang=&quot;ruby&quot; line=&quot;1&quot;&gt;&lt;br&gt;git config –global apply.whitespace nowarn&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;ul&gt;&lt;br&gt;    &lt;li&gt;Some nice aliases:&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;br&gt;&lt;pre lang=&quot;bash&quot; line=&quot;1&quot;&gt;&lt;br&gt;gb = git branch&lt;br&gt;gba = git branch -a&lt;br&gt;gc = git commit -v&lt;br&gt;gd = git diff | mate&lt;br&gt;gl = git pull&lt;br&gt;gp = git push&lt;br&gt;gst = git status&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;ul&gt;&lt;br&gt;    &lt;li&gt;&lt;span class=&quot;caps&quot;&gt;START&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;USING&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;GIT&lt;/span&gt; &lt;em&gt;&lt;/em&gt;&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;br&gt;&lt;pre lang=&quot;ruby&quot; line=&quot;1&quot;&gt;&lt;br&gt;git init&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;ul&gt;&lt;br&gt;    &lt;li&gt;TO &lt;span class=&quot;caps&quot;&gt;IGNORE&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;SOME&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;FILES&lt;/span&gt; &lt;/li&gt;&lt;br&gt;&lt;/ul&gt;
    
    </summary>
    
      <category term="Github" scheme="http://www.qxyer.com/categories/Github/"/>
    
      <category term="Octopress" scheme="http://www.qxyer.com/categories/Github/Octopress/"/>
    
    
  </entry>
  
  <entry>
    <title>Delphi多线程之WaitForSingleObject</title>
    <link href="http://www.qxyer.com/2012/07/31/delphi-thread-waitforsingleobject/"/>
    <id>http://www.qxyer.com/2012/07/31/delphi-thread-waitforsingleobject/</id>
    <published>2012-07-31T07:50:00.000Z</published>
    <updated>2018-04-26T10:47:30.774Z</updated>
    
    <content type="html"><![CDATA[<p>函数定义</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">WaitForSingleObject</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  hHandle: THandle;      <span class="comment">&#123;要等待的对象句柄&#125;</span></span></span></span><br><span class="line"><span class="function"><span class="params">  dwMilliseconds: DWORD  <span class="comment">&#123;等待的时间, 单位是毫秒&#125;</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span>:</span> DWORD; <span class="keyword">stdcall</span>;       <span class="comment">&#123;返回值如下:&#125;</span></span><br><span class="line"></span><br><span class="line">WAIT_OBJECT_0  <span class="comment">&#123;等着了, 本例中是: 等的那个进程终于结束了&#125;</span></span><br><span class="line">WAIT_TIMEOUT   <span class="comment">&#123;等过了点(你指定的时间), 也没等着&#125;</span></span><br><span class="line">WAIT_ABANDONED <span class="comment">&#123;好不容易等着了, 但人家还是不让咱执行; 这一般是互斥对象&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//WaitForSingleObject 的第二个参数一般给常数值 INFINITE, 表示一直等下去, 死等.</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>示例代码</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unit</span> Unit1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uses</span></span><br><span class="line">  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,</span><br><span class="line">  Dialogs, StdCtrls;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span></span><br><span class="line">  <span class="title">TForm1</span> = <span class="keyword">class</span>(TForm)</span><br><span class="line">    Button1: TButton;</span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">Button1Click</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  Form1: TForm1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">implementation</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&#123;$R *.dfm&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  hProcess: THandle; <span class="comment">&#123;进程句柄&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#123;等待一个指定句柄的进程什么时候结束&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyThreadFun</span><span class="params">(p: Pointer)</span>:</span> DWORD; <span class="keyword">stdcall</span>;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> WaitForSingleObject(hProcess, INFINITE) = WAIT_OBJECT_0 <span class="keyword">then</span></span><br><span class="line">    Form1.Text := Format(<span class="string">'进程 %d 已关闭'</span>, [hProcess]);</span><br><span class="line">  Result := <span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">&#123;启动一个进程, 并建立新线程等待它的结束&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TForm1</span>.<span class="title">Button1Click</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  pInfo: TProcessInformation;</span><br><span class="line">  sInfo: TStartupInfo;</span><br><span class="line">  Path: <span class="keyword">array</span>[<span class="number">0</span>..MAX_PATH-<span class="number">1</span>] <span class="keyword">of</span> Char;</span><br><span class="line">  ThreadID: DWORD;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="comment">&#123;先获取记事本的路径&#125;</span></span><br><span class="line">  GetSystemDirectory(Path, MAX_PATH);</span><br><span class="line">  StrCat(Path, <span class="string">'\notepad.exe'</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">&#123;用 CreateProcess 打开记事本并获取其进程句柄, 然后建立线程监视&#125;</span></span><br><span class="line">  FillChar(sInfo, SizeOf(sInfo), <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> CreateProcess(Path, <span class="keyword">nil</span>, <span class="keyword">nil</span>, <span class="keyword">nil</span>, False, <span class="number">0</span>, <span class="keyword">nil</span>, <span class="keyword">nil</span>, sInfo, pInfo) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    hProcess := pInfo.hProcess;                           <span class="comment">&#123;获取进程句柄&#125;</span></span><br><span class="line">    Text := Format(<span class="string">'进程 %d 已启动'</span>, [hProcess]); </span><br><span class="line">    CreateThread(<span class="keyword">nil</span>, <span class="number">0</span>, @MyThreadFun, <span class="keyword">nil</span>, <span class="number">0</span>, ThreadID); <span class="comment">&#123;建立线程监视&#125;</span></span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;函数定义&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;WaitForSingleObject&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;  hHandle: THandle;      &lt;span class=&quot;comment&quot;&gt;&amp;#123;要等待的对象句柄&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;  dwMilliseconds: DWORD  &lt;span class=&quot;comment&quot;&gt;&amp;#123;等待的时间, 单位是毫秒&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;)&lt;/span&gt;:&lt;/span&gt; DWORD; &lt;span class=&quot;keyword&quot;&gt;stdcall&lt;/span&gt;;       &lt;span class=&quot;comment&quot;&gt;&amp;#123;返回值如下:&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WAIT_OBJECT_0  &lt;span class=&quot;comment&quot;&gt;&amp;#123;等着了, 本例中是: 等的那个进程终于结束了&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WAIT_TIMEOUT   &lt;span class=&quot;comment&quot;&gt;&amp;#123;等过了点(你指定的时间), 也没等着&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WAIT_ABANDONED &lt;span class=&quot;comment&quot;&gt;&amp;#123;好不容易等着了, 但人家还是不让咱执行; 这一般是互斥对象&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//WaitForSingleObject 的第二个参数一般给常数值 INFINITE, 表示一直等下去, 死等.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Delphi" scheme="http://www.qxyer.com/categories/Delphi/"/>
    
      <category term="Thread" scheme="http://www.qxyer.com/categories/Delphi/Thread/"/>
    
    
  </entry>
  
  <entry>
    <title>在64位 Windows 7 中部署中文化的Octopress</title>
    <link href="http://www.qxyer.com/2012/07/20/windows7-64bit-octopress/"/>
    <id>http://www.qxyer.com/2012/07/20/windows7-64bit-octopress/</id>
    <published>2012-07-20T03:35:00.000Z</published>
    <updated>2018-04-26T10:47:30.773Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="前言——可以在Linux环境下部署的话，还是尽可能在Linux下部署吧…"><a href="#前言——可以在Linux环境下部署的话，还是尽可能在Linux下部署吧…" class="headerlink" title="前言——可以在Linux环境下部署的话，还是尽可能在Linux下部署吧…"></a>前言——可以在Linux环境下部署的话，还是尽可能在Linux下部署吧…</h3></blockquote><p>真的不是开玩笑的，除非你像我一样喜欢折腾。即使没有Linux系统，能够运行虚拟机的话，装个虚拟的Linux系统也比直接在Windows中部署要简单。</p><p>一般的安装步骤，在Octopress的<a href="[http://octopress.org/docs/]">文檔</a>中就有详细的说明。而在Windows 7中部署，则可参考<a href="[http://sinosmond.github.com/blog/2012/03/12/install-and-deploy-octopress-to-github-on-windows7-from-scratch/]">Sinosmond的一篇文章</a>。 具体的部署过程，我就不再重复了，只是在部署过程中有几点是需要注意的。</p><a id="more"></a><p>###Ruby</p><p>Octopress要求的Ruby的版本是1.9.2，最好使用该版本，因为不同版本间的函数库有可能有出入，导致某些插件无法运行。这里经过我的折腾，发现最新版1.9.3也是支持的，目前使用起来没有什么问题，但是需要将octopress根目录下的“.rvmrc”文件中的一行改成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rvm use 1.9.3</span><br></pre></td></tr></table></figure><p>###分支 </p><p>若要使用github的个人page，建立repo时设置的名字必须是<code>&lt;yourname&gt;.github.com</code>，这里<code>&lt;yourname&gt;</code>指的是你的github用户名。这样就可以让你的页面可以通过地址<code>http://&lt;yourname&gt;.github.com</code>，来访问，如果不是这样命名的话，你的github pages只能通过<code>github.com/&lt;reponame&gt;</code>访问。 使用<code>rake setup_github_pages</code>后，需要输入github pages的repo地址，格式是<a href="mailto:`git@github.com" target="_blank" rel="noopener">`git@github.com</a>:<yourname>/<yourname>.github.com.git`。</yourname></yourname></p><p>使用<code>rake deploy</code>后，会将public活页夹下的所有文件拷贝到分支管理目录_deploy活页夹中，也即是<code>&lt;yourname&gt;.github.com</code>的master分支目录，然后上传到github。如需对源代码进行版本管理，需要另外建立source分支，并使用基本的git命令进行版本管理。</p><p>###中文化</p><p>Octopress原本就是一个英文的框架，所以并没有考虑很多使用其他语言会导致的问题。在尝试中文化时，可能会遇到一些问题，还好这些问题都是能解决的。</p><p>####rake generate失败</p><p>如果直接使用原框架书写中文博文，会在generate时失败，提示出现非法UTF-8字符。首先要确认是否已经按照<a href="[http://sinosmond.github.com/blog/2012/03/12/install-and-deploy-octopress-to-github-on-windows7-from-scratch/]">Sinosmond的文章</a>配置，并设置好<code>LANG</code>等环境变量。如果仍出现该提示是因为原本的文件和生成的文件都是ASCII编码的，如果直接输入中文当然不能被识别。正确的做法是，若要在文件中书写中文，首先将文件保存为<code>UTF-8 without BOM</code>编码格式，然后再进行书写。注意是<code>UTF-8 without BOM</code>而不是单纯的<code>UTF-8</code>编码，如果存成后者，在generate时不会出错，但是生成页面时会出现奇怪的现象。</p><p>####中文化文章分类</p><p>如果直接使用中文的文章分类，在deploy后会发现，点击文章分类后出现404错误。这是因为在在generate时，<code>category_generator.rb</code>插件将根据分类名称生成分类页面活页夹，而生成的活页夹是中文的，这在URL中是不允许的，因此无法定位到该页面。这里有<a href="[http://geron.heroku.com/blog/2012/octo-cate-cn-spo]">Geron的一篇文章</a>，介绍如何为octopress提供中文分类支持。但是我使用该方法后，并没有成功应用。他提供的方法是直接将中文的文章分类转换为url中的编码(就是那种类似<code>%3d</code>这样代表文字的编码)。我使用后，确实令中文的活页夹变成了URL编码的活页夹，这样URL就跟目录相一致。我在本地也测试成功，但是上传github后依然出现404错误，并且考虑到这种方法会产生意义不明显的URL，所以只好采用别的方法。这里我想到了一个将分类名称跟索引分离的方法。即是在一个分类变量中，同时储存一个要显示的名称，还有一个要生成的路径名，这一串字符作为分类索引，并令显示与实现分离。</p><p><a href="[https://github.com/denjones/denjones.github.com/commit/1d4f3b9433a4d77e31530c4d5f20611c9b9829e2#diff-1]">这里是我对<code>category_generator.rb</code>的修改</a>。</p><p>修改后的分类格式变更为<code>&lt;分类显示名称&gt;{&lt;分类目录名称&gt;}</code>。比如说你想建立一个“随笔”分类，你想让分类页面保存在一个叫“essay”的目录中，你就要在文章markdown文件的头部加入这样的一行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">categories:  随笔&#123;essay&#125;</span><br></pre></td></tr></table></figure><p>如果希望归类到多个分类，则需要这样写：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">categories: </span><br><span class="line"> - 随笔&#123;essay&#125;</span><br><span class="line"> - Octopress&#123;octopress&#125;</span><br></pre></td></tr></table></figure></p><p>除此之外，还要对一些用于显示分类名称的页面做一些修改。把其中的<code>category</code>修改为<code>category[/[ ^ { ]*/]</code>，因为这里的<code>category</code>已经变成了<code>&lt;分类显示名称&gt;{&lt;分类目录名称&gt;}</code>的格式，需要使用正则表达式取出<code>&lt;分类显示名称&gt;</code>这一部份用于显示。</p><p>我的octopress框架已经对相关部份做了处理，是一个比较完善的中文版本的Octopress，如果不喜欢折腾的可以直接在Github clone本博客的框架的<a href="[https://github.com/denjones/denjones.github.com/tree/source]">开源代码</a>，然后再把其中的<code>_post</code>等目录中的多余文件去掉，修改为自己的框架进行使用。</p><p>###代码高亮</p><p>其实这个问题才是在64位Windows 7中部署Octopress会遇到的难题。Octopress已经自带了代码高亮(Highlighting)的相关插件，使用的是<a href="[http://pygments.org/]">pygments</a>这款插件。但是这款插件是用Python语言写的，所以在本地运行时，需要有安装Python环境。因此进入Python的<a href="[http://www.activestate.com/activepython/downloads]">主页</a>下载安装包进行安装。好了，既然是64位的Windows7系统，那么首选当然是ActivePython的64-bit版本。兴高采烈的下载安装后，发现问题来了，如果设置了代码高亮的<code>lang</code>属性，generate时会出现错误<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Liquid error: Could not open library ‘.dll’: The specified module could not be found.</span><br></pre></td></tr></table></figure></p><p>查看错误消息发现在执行<code>rubypython.rb</code>中的函数时，产生了错误。Google后得知rubypython对Windows支持不好，因此需要手动修改其中的一些代码。</p><p>对ruby目录下的<code>lib\ruby\gems\ruby 1.9.x&gt;\gems\rubypython-0.5.x\lib\rubypython\pythonexec.rb</code>作此<a href="[https://github.com/bendoerr/rubypython/commit/1349aea1c6faa459c4be8474e4a7e878f08459c2]">修改</a>。</p><p>一般来说这样就可以解决问题，但是在这里这个错误<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Liquid error: Could not open library ‘.dll’: The specified module could not be found.</span><br></pre></td></tr></table></figure></p><p>依然出现。考虑是不是64位的问题，于是进入<code>C:/windows/sysWOW64</code>下，并没有发现Python的相关dll，于是到<code>C:/windows/system32</code>下，将<code>python27.dll pythoncom27.dll pywintypes27.dll</code>拷贝到<code>C:/windows/sysWOW64</code>下。generate发现错误变成<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Liquid error: Could not open library ‘C:/windows/system32/python27.dll’: The specified module could not be found.</span><br></pre></td></tr></table></figure></p><p>然后我就开始百思不得其解。最后没有办法，尝试安装了ActivePython的32-bit版本，问题迎刃而解。估计是rubypython对64位的python环境支持不好，无法打开64位Python的dll。所以在选择ActivePython版本时，请使用32-bit版本。</p><p>###结语</p><p>至此，中文版的Octopress在64位windows7中部署成功。折腾了那么久，总算有所回报。但是想到要在别的Windows机器上写博客，也要经过如此复杂的环境配置，我就觉得蛋疼。还好中文框架源码已经使用了版本管理，并不需要对框架进行重复的修改。总的来说在Linux下部署Octopress要比在Windows中简单得多，若经不起折腾，还是不由选用Windows + Octopress这种组合。但是既然你选用了Octopress，证明你的折腾能力还是有的，因为Octopress是一款面向Hacker的博客框架，就在使用Octopress的过程中，享受折腾带来的乐趣吧。</p><p>转自:<a href="[http://blog.sprabbit.com/blog/2012/03/23/octopress/]">http://blog.sprabbit.com/blog/2012/03/23/octopress/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h3 id=&quot;前言——可以在Linux环境下部署的话，还是尽可能在Linux下部署吧…&quot;&gt;&lt;a href=&quot;#前言——可以在Linux环境下部署的话，还是尽可能在Linux下部署吧…&quot; class=&quot;headerlink&quot; title=&quot;前言——可以在Linux环境下部署的话，还是尽可能在Linux下部署吧…&quot;&gt;&lt;/a&gt;前言——可以在Linux环境下部署的话，还是尽可能在Linux下部署吧…&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;真的不是开玩笑的，除非你像我一样喜欢折腾。即使没有Linux系统，能够运行虚拟机的话，装个虚拟的Linux系统也比直接在Windows中部署要简单。&lt;/p&gt;
&lt;p&gt;一般的安装步骤，在Octopress的&lt;a href=&quot;[http://octopress.org/docs/]&quot;&gt;文檔&lt;/a&gt;中就有详细的说明。而在Windows 7中部署，则可参考&lt;a href=&quot;[http://sinosmond.github.com/blog/2012/03/12/install-and-deploy-octopress-to-github-on-windows7-from-scratch/]&quot;&gt;Sinosmond的一篇文章&lt;/a&gt;。 具体的部署过程，我就不再重复了，只是在部署过程中有几点是需要注意的。&lt;/p&gt;
    
    </summary>
    
      <category term="Octopress" scheme="http://www.qxyer.com/categories/Octopress/"/>
    
      <category term="windows" scheme="http://www.qxyer.com/categories/Octopress/windows/"/>
    
    
  </entry>
  
  <entry>
    <title>SQL Server 2008 中文乱码解决方案</title>
    <link href="http://www.qxyer.com/2012/07/11/sql-server-collate/"/>
    <id>http://www.qxyer.com/2012/07/11/sql-server-collate/</id>
    <published>2012-07-11T02:18:00.000Z</published>
    <updated>2018-04-26T10:47:30.773Z</updated>
    
    <content type="html"><![CDATA[<p>昨天一同事用到SQL Server 2008向数据库写入汉字时，老出现乱码，在网上查了好多资料，都没有这方面的解释，不想今日和sql2000一比，竟找到原因。原来我在建数据库时用了默认的排序规则<code>SQL_Latin1_General_CP1_CI_AS</code>，只需要将它改为 <code>Chinese_PRC_CI_AS</code>就OK了。</p><p>SQL Code</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">database</span> <span class="keyword">COLLATE</span> Chinese_PRC_CS_AS <span class="comment">--区分大小写</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">database</span> <span class="keyword">COLLATE</span> Chinese_PRC_CI_AS <span class="comment">--不区分大小写</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨天一同事用到SQL Server 2008向数据库写入汉字时，老出现乱码，在网上查了好多资料，都没有这方面的解释，不想今日和sql2000一比，竟找到原因。原来我在建数据库时用了默认的排序规则&lt;code&gt;SQL_Latin1_General_CP1_CI_AS&lt;/code
      
    
    </summary>
    
      <category term="SQL" scheme="http://www.qxyer.com/categories/SQL/"/>
    
      <category term="数据库" scheme="http://www.qxyer.com/categories/SQL/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>VPN设置路由表,自动区分国内外流量</title>
    <link href="http://www.qxyer.com/2012/06/25/vpn-routes-chnroutes/"/>
    <id>http://www.qxyer.com/2012/06/25/vpn-routes-chnroutes/</id>
    <published>2012-06-25T04:01:00.000Z</published>
    <updated>2018-04-26T10:47:30.773Z</updated>
    
    <content type="html"><![CDATA[<p>之前大学好友<a href="http://qiuyun.me" target="_blank" rel="noopener">邱韵</a>给了我一个VPN,试用了几次就一直没有用了,主要是因为连上的VPN以后，默认所有的网络流量都会加密后通过代理服务器发送。这会影响到访问国内的网站的速度，特别是国内的视频网站基本没法看了。所以就一直还在用之前的<a href="https://developers.google.com/appengine/" target="_blank" rel="noopener">GAE</a>,今天兴趣来了又想在折腾一下,马上google之,发现这个问题可以通过设置路由表来解决。</p><p>在GoogleCode上有一个开源项目 <a href="http://code.google.com/p/chnroutes/" target="_blank" rel="noopener">chnroutes</a> 就提供了相关的工具和脚本。<br>大家可以参考这个项目来找到适合自己环境的路由表设置。</p><p>使用方法：<a href="http://code.google.com/p/chnroutes/wiki/Usage" target="_blank" rel="noopener">http://code.google.com/p/chnroutes/wiki/Usage</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前大学好友&lt;a href=&quot;http://qiuyun.me&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;邱韵&lt;/a&gt;给了我一个VPN,试用了几次就一直没有用了,主要是因为连上的VPN以后，默认所有的网络流量都会加密后通过代理服务器发送。这会影响到访问
      
    
    </summary>
    
      <category term="VPN" scheme="http://www.qxyer.com/categories/VPN/"/>
    
    
  </entry>
  
  <entry>
    <title>解决Delphi的剪贴板的AsText方法乱码的问题</title>
    <link href="http://www.qxyer.com/2012/06/25/clipborard-astext/"/>
    <id>http://www.qxyer.com/2012/06/25/clipborard-astext/</id>
    <published>2012-06-25T02:03:00.000Z</published>
    <updated>2018-04-26T10:47:30.773Z</updated>
    
    <content type="html"><![CDATA[<p>Wrong character in ClipBoard.AsText?? </p><p>In Delphi, use ClipBoard unit, a common method “ClipBoard.AsText” is doing a wrong way when using non-English character. How to fix it? Look into the source code, you will find VCL use CF_TEXT to do the job (change it to CF_UNICODETEXT)!<br>Now we can use following code to due with the problem! </p><p>使用Delphi的剪贴板的AsText方法会导致非英语出现乱码,怎么解决?改用Unicode就OK啦 </p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">SetClipboardText</span><span class="params">(AStr: <span class="keyword">string</span>)</span>;</span> </span><br><span class="line"><span class="keyword">var</span>    <span class="comment">// SetBuffer(CF_TEXT, PChar(Value)^, Length(Value) + 1); </span></span><br><span class="line">  Data: THandle; </span><br><span class="line">  DataPtr: Pointer; </span><br><span class="line">  Size: Integer; </span><br><span class="line">  WStr: PWideChar; </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">  Size := Length(AStr) * <span class="number">4</span>; </span><br><span class="line">  WStr := AllocMem(Size); </span><br><span class="line">  <span class="keyword">try</span> </span><br><span class="line">    <span class="comment">// convert to Unicode </span></span><br><span class="line">    StringToWideChar(AStr, WStr, Size); </span><br><span class="line">    OpenClipboard(<span class="number">0</span>); </span><br><span class="line">    EmptyClipboard; </span><br><span class="line">    Data := GlobalAlloc(GMEM_MOVEABLE+GMEM_DDESHARE, Size); </span><br><span class="line">    <span class="keyword">try</span> </span><br><span class="line">      DataPtr := GlobalLock(Data); </span><br><span class="line">      <span class="keyword">try</span> </span><br><span class="line">        Move(WStr^, DataPtr^, Size);   </span><br><span class="line">        SetClipboardData(CF_UNICODETEXT, Data);   </span><br><span class="line">      <span class="keyword">finally</span> </span><br><span class="line">        GlobalUnlock(Data);   </span><br><span class="line">      <span class="keyword">end</span>; </span><br><span class="line">    <span class="keyword">except</span> </span><br><span class="line">      GlobalFree(Data); </span><br><span class="line">      <span class="keyword">raise</span>; </span><br><span class="line">    <span class="keyword">end</span>; </span><br><span class="line">  <span class="keyword">finally</span> </span><br><span class="line">    CloseClipboard; </span><br><span class="line">    FreeMem(WStr); </span><br><span class="line">  <span class="keyword">end</span>; </span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Wrong character in ClipBoard.AsText?? &lt;/p&gt;
&lt;p&gt;In Delphi, use ClipBoard unit, a common method “ClipBoard.AsText” is doing a wrong way when
      
    
    </summary>
    
      <category term="Delphi" scheme="http://www.qxyer.com/categories/Delphi/"/>
    
    
  </entry>
  
  <entry>
    <title>Delphi实现windows系统下设置静音</title>
    <link href="http://www.qxyer.com/2012/06/01/windows-system-mute/"/>
    <id>http://www.qxyer.com/2012/06/01/windows-system-mute/</id>
    <published>2012-06-01T05:23:00.000Z</published>
    <updated>2018-04-26T10:47:30.772Z</updated>
    
    <content type="html"><![CDATA[<p>这段时间一直在做鼠标录制,系统静音,自动喊话这些东西,这里先把静音的主要代码放上来,一是方便自己以后不用再到处找资料了,二也是方便大家.</p><h3 id="代码功能"><a href="#代码功能" class="headerlink" title="代码功能:"></a>代码功能:</h3><ul><li>win7下实现本进程静音</li><li>XP下实现全局静音</li></ul><h3 id="代码主要用到的函数："><a href="#代码主要用到的函数：" class="headerlink" title="代码主要用到的函数："></a>代码主要用到的函数：</h3><ul><li><a href="http://msdn.microsoft.com/en-us/library/aa910259.aspx" target="_blank" rel="noopener">mixerGetLineInfo</a></li><li><a href="http://msdn.microsoft.com/en-us/library/aa909824.aspx" target="_blank" rel="noopener">mixerGetLineControls</a></li><li><a href="http://msdn.microsoft.com/en-us/library/aa909795.aspx" target="_blank" rel="noopener">mixerSetControlDetails</a></li></ul><h3 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h3><p>引用: <code>MMSystem</code>单元</p><a id="more"></a><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取信息</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetMasterMute</span><span class="params">(<span class="keyword">var</span> Mixer: hMixer; <span class="keyword">var</span> Control: TMixerControl)</span>:</span> MMResult;</span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  hMix: hmixer;</span><br><span class="line">  Line: TMixerLine;</span><br><span class="line">  Controls: TMixerLineControls;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ZeroMemory(@Line, SizeOf(Line));</span><br><span class="line">  Line.cbStruct := SizeOf(Line);</span><br><span class="line">  Line.dwComponentType := MIXERLINE_COMPONENTTYPE_DST_SPEAKERS;</span><br><span class="line"></span><br><span class="line">  mixerOpen(@hMix, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  Mixer := hMix;</span><br><span class="line">  Result := mixerGetLineInfo(hMix, @Line, MIXER_GETLINEINFOF_COMPONENTTYPE);</span><br><span class="line">  <span class="keyword">if</span> Result = MMSYSERR_NOERROR <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    ZeroMemory(@Controls, SizeOf(Controls));</span><br><span class="line">    Controls.cbStruct := SizeOf(Controls);</span><br><span class="line">    Controls.dwLineID := Line.dwLineID;</span><br><span class="line">    Controls.cControls := <span class="number">1</span>;</span><br><span class="line">    Controls.dwControlType := MIXERCONTROL_CONTROLTYPE_MUTE;</span><br><span class="line">    Controls.cbmxctrl := SizeOf(Control);</span><br><span class="line">    Controls.pamxctrl := @Control;</span><br><span class="line">    Result := mixerGetLineControls(hMix, @Controls, MIXER_GETLINECONTROLSF_ONEBYTYPE);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"><span class="comment">//设置</span></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">SetMasterMuteValue</span><span class="params">(Value: Boolean)</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  hMix: HMIXER;</span><br><span class="line">  MasterMute: TMixerControl;</span><br><span class="line">  Details: TMixerControlDetails;</span><br><span class="line">  BoolDetails: TMixerControlDetailsBoolean;</span><br><span class="line">  iCode: MMResult;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  Code := GetMasterMute(hMix, MasterMute);</span><br><span class="line">  <span class="keyword">if</span> Code = MMSYSERR_NOERROR <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">with</span> Details <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      cbStruct := SizeOf(Details);</span><br><span class="line">      dwControlID := MasterMute.dwControlID;</span><br><span class="line">      cChannels := <span class="number">1</span>;</span><br><span class="line">      cMultipleItems := <span class="number">0</span>;</span><br><span class="line">      cbDetails := SizeOf(BoolDetails);</span><br><span class="line">      paDetails := @BoolDetails;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    LongBool(BoolDetails.fValue) := Value;</span><br><span class="line">    Code := mixerSetControlDetails(hMix, @Details, MIXER_SETCONTROLDETAILSF_VALUE);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mixerClose(hMix);</span><br><span class="line">  <span class="keyword">if</span> iCode &lt;&gt; MMSYSERR_NOERROR <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">raise</span> Exception.CreateFmt(<span class="string">'SetMasterMuteValue failure, '</span>+<span class="string">'multimedia system error #%d'</span>, [iCode]);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这段时间一直在做鼠标录制,系统静音,自动喊话这些东西,这里先把静音的主要代码放上来,一是方便自己以后不用再到处找资料了,二也是方便大家.&lt;/p&gt;
&lt;h3 id=&quot;代码功能&quot;&gt;&lt;a href=&quot;#代码功能&quot; class=&quot;headerlink&quot; title=&quot;代码功能:&quot;&gt;&lt;/a&gt;代码功能:&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;win7下实现本进程静音&lt;/li&gt;
&lt;li&gt;XP下实现全局静音&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;代码主要用到的函数：&quot;&gt;&lt;a href=&quot;#代码主要用到的函数：&quot; class=&quot;headerlink&quot; title=&quot;代码主要用到的函数：&quot;&gt;&lt;/a&gt;代码主要用到的函数：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa910259.aspx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;mixerGetLineInfo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa909824.aspx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;mixerGetLineControls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa909795.aspx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;mixerSetControlDetails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;实现代码&quot;&gt;&lt;a href=&quot;#实现代码&quot; class=&quot;headerlink&quot; title=&quot;实现代码&quot;&gt;&lt;/a&gt;实现代码&lt;/h3&gt;&lt;p&gt;引用: &lt;code&gt;MMSystem&lt;/code&gt;单元&lt;/p&gt;
    
    </summary>
    
      <category term="Delphi" scheme="http://www.qxyer.com/categories/Delphi/"/>
    
    
  </entry>
  
  <entry>
    <title>TlistView自绘进度条</title>
    <link href="http://www.qxyer.com/2012/05/23/delphi-listview-drawitem/"/>
    <id>http://www.qxyer.com/2012/05/23/delphi-listview-drawitem/</id>
    <published>2012-05-23T06:58:00.000Z</published>
    <updated>2018-04-26T10:47:30.772Z</updated>
    
    <content type="html"><![CDATA[<p>TListView的Item条一般是由系统自画的，但电驴就实现了自画，使之看起来很漂亮，我们用DELPHI也可以实现！</p><p>用进度条时的效果:</p><p><img src="http://p.blog.csdn.net/images/p_blog_csdn_net/xzhifei/abf82d13bf6646eba8f01b11502d03b7.png" alt="邱兴福"></p><p>不用进度条时的效果:</p><p><img src="http://p.blog.csdn.net/images/p_blog_csdn_net/xzhifei/a4fa03c311534829b28d4449fd681d5d.png" alt="TListView自绘"></p><a id="more"></a><p>首先要引用’CommCtrl’单元，这是TListView底层控制单元：</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">uses</span></span><br><span class="line"> CommCtrl;</span><br><span class="line"><span class="comment">//画状态条</span></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">DrawSubItem</span><span class="params">(LV: TListView; Item: TListItem; SubItem: Integer;</span></span></span><br><span class="line"><span class="function"><span class="params"> Prosition: Single; Max, Style: Integer; IsShowProgress: Boolean;</span></span></span><br><span class="line"><span class="function"><span class="params"> DrawColor: TColor = $00005B00;</span></span></span><br><span class="line"><span class="function"><span class="params"> FrameColor: TColor = $00002F00)</span>;</span></span><br><span class="line"><span class="comment">//获取SubItem的区域</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">GetItemRect</span><span class="params">(LV_Handle, iItem, iSubItem: Integer)</span>:</span> TRect;</span><br><span class="line"> <span class="keyword">var</span></span><br><span class="line">    Rect: TRect;</span><br><span class="line"> <span class="keyword">begin</span></span><br><span class="line">    ListView_GetSubItemRect(LV_Handle, iItem, iSubItem, LVIR_LABEL, @Rect);</span><br><span class="line">    Result := Rect;</span><br><span class="line"> <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">var</span></span><br><span class="line"> PaintRect, r: TRect;</span><br><span class="line"> i, iWidth, x, y: integer;</span><br><span class="line"> S: <span class="keyword">string</span>;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"> <span class="keyword">try</span></span><br><span class="line">    <span class="keyword">with</span> lv <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="comment">//LockPaint := True;</span></span><br><span class="line">      PaintRect := GetItemRect(LV.Handle, Item.<span class="keyword">Index</span>, SubItem);</span><br><span class="line">     r := PaintRect;</span><br><span class="line"><span class="comment">//      if SubItem = DrawSubItem then</span></span><br><span class="line">      <span class="keyword">Begin</span></span><br><span class="line">        <span class="comment">//这一段是算出百分比</span></span><br><span class="line">        <span class="keyword">if</span> Prosition &gt;= Max <span class="keyword">then</span></span><br><span class="line">          Prosition := <span class="number">100</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          <span class="keyword">if</span> Prosition &lt;= <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">            Prosition := <span class="number">0</span></span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">            Prosition := Round((Prosition / Max) * <span class="number">100</span>);</span><br><span class="line">        <span class="keyword">if</span> (Prosition = <span class="number">0</span>) <span class="keyword">and</span> (<span class="keyword">not</span> IsShowProgress) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">        <span class="comment">//如果是百分比是0，就直接显示空白</span></span><br><span class="line">          Canvas.FillRect(r);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">        <span class="comment">//先直充背景色</span></span><br><span class="line">          Canvas.FillRect(r);</span><br><span class="line">          Canvas.Brush.Color := Color;</span><br><span class="line"><span class="comment">//          Canvas.FillRect(r);</span></span><br><span class="line">        <span class="comment">//画一个外框</span></span><br><span class="line">          InflateRect(r, -<span class="number">2</span>, -<span class="number">2</span>);</span><br><span class="line">          Canvas.Brush.Color := FrameColor; <span class="comment">//$00002F00;</span></span><br><span class="line">          Canvas.FrameRect(R);</span><br><span class="line">          Canvas.Brush.Color := Color;</span><br><span class="line">          InflateRect(r, -<span class="number">1</span>, -<span class="number">1</span>);</span><br><span class="line"><span class="comment">//          Canvas.FillRect(r);</span></span><br><span class="line">          InflateRect(r, -<span class="number">1</span>, -<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//根据百分比算出要画的进度条内容宽度</span></span><br><span class="line">          iWidth := R.Right - Round((R.Right - r.Left) * ((<span class="number">100</span> - Prosition) /</span><br><span class="line">            <span class="number">100</span>));</span><br><span class="line">          <span class="keyword">case</span> Style <span class="keyword">of</span></span><br><span class="line">            <span class="number">0</span>: <span class="comment">//进度条类型，实心填充</span></span><br><span class="line">              <span class="keyword">begin</span></span><br><span class="line">                Canvas.Brush.Color := DrawColor;</span><br><span class="line">                r.Right := iWidth;</span><br><span class="line">                Canvas.FillRect(r);</span><br><span class="line">              <span class="keyword">end</span>;</span><br><span class="line">            <span class="number">1</span>: <span class="comment">//进度条类型，竖线填充</span></span><br><span class="line">              <span class="keyword">begin</span></span><br><span class="line">                i := r.Left;</span><br><span class="line">                <span class="keyword">while</span> i &lt; iWidth <span class="keyword">do</span></span><br><span class="line">                <span class="keyword">begin</span></span><br><span class="line">                  Canvas.Pen.Color := Color;</span><br><span class="line">                  Canvas.MoveTo(i, r.Top);</span><br><span class="line">                  Canvas.Pen.Color := DrawColor;</span><br><span class="line">                  canvas.LineTo(i, r.Bottom);</span><br><span class="line">                  Inc(i, <span class="number">3</span>);</span><br><span class="line">                <span class="keyword">end</span>;</span><br><span class="line">              <span class="keyword">end</span>;</span><br><span class="line">          <span class="keyword">end</span>;</span><br><span class="line"><span class="comment">//画好了进度条后，现在要做的就是显示进度数字了</span></span><br><span class="line">          Canvas.Brush.Style := bsClear;</span><br><span class="line">          <span class="keyword">if</span> Prosition = Round(Prosition) <span class="keyword">then</span></span><br><span class="line">            S := Format(<span class="string">'%d%%'</span>, [Round(Prosition)])</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">            S := FormatFloat(<span class="string">'#0.0'</span>, Prosition);</span><br><span class="line">          <span class="keyword">with</span> PaintRect <span class="keyword">do</span></span><br><span class="line">          <span class="keyword">begin</span></span><br><span class="line">            x := Left + (Right - Left + <span class="number">1</span> - Canvas.TextWidth(S)) <span class="keyword">div</span> <span class="number">2</span>;</span><br><span class="line">            y := Top + (Bottom - Top + <span class="number">1</span> - Canvas.TextHeight(S)) <span class="keyword">div</span> <span class="number">2</span>;</span><br><span class="line">          <span class="keyword">end</span>;</span><br><span class="line">          SetBkMode(Canvas.handle, TRANSPARENT);</span><br><span class="line">          Canvas.TextRect(PaintRect, x, y, S);</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line"><span class="comment">//进度条全部画完，把颜色设置成默认色了</span></span><br><span class="line">        Canvas.Brush.Color := Color;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"> <span class="keyword">except</span></span><br><span class="line"> <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>上面是画进度条的，现在要给TlistView处理Item重绘的消息，事件是OnCustomDrawItem，需要说明的是，如果想要随心所欲的自画Item，那么就要全部自己来完成，不再需要系统来处理：</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TForm1</span>.<span class="title">ListView1CustomDrawItem</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params"> Sender: TCustomListView; Item: TListItem; State: TCustomDrawState;</span></span></span><br><span class="line"><span class="function"><span class="params"> <span class="keyword">var</span> DefaultDraw: Boolean)</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line"> BoundRect, Rect: TRect;</span><br><span class="line"> i: integer;</span><br><span class="line"> TextFormat: Word;</span><br><span class="line"> LV: TListView;</span><br><span class="line"><span class="comment">//这个子过程是用来画CheckBox和ImageList的</span></span><br><span class="line"> <span class="function"><span class="keyword">procedure</span> <span class="title">Draw_CheckBox_ImageList</span><span class="params">(r: TRect; aCanvas: TCanvas; Checked: Boolean)</span>;</span></span><br><span class="line"> <span class="keyword">var</span></span><br><span class="line">    R1: TRect;</span><br><span class="line">    i: integer;</span><br><span class="line"> <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> Sender.Checkboxes <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      aCanvas.Pen.Color := clBlack;</span><br><span class="line">      aCanvas.Pen.Width := <span class="number">2</span>;</span><br><span class="line">      <span class="comment">//画CheckBox外框</span></span><br><span class="line">      aCanvas.Rectangle(r.Left + <span class="number">2</span>, r.Top + <span class="number">2</span>, r.Left + <span class="number">14</span>, r.Bottom - <span class="number">2</span>);</span><br><span class="line">      <span class="keyword">if</span> Checked <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span> <span class="comment">//画CheckBox的勾</span></span><br><span class="line">        aCanvas.MoveTo(r.Left + <span class="number">4</span>, r.Top + <span class="number">6</span>);</span><br><span class="line">        aCanvas.LineTo(r.Left + <span class="number">6</span>, r.Top + <span class="number">11</span>);</span><br><span class="line">        aCanvas.LineTo(r.Left + <span class="number">11</span>, r.Top + <span class="number">5</span>);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      aCanvas.Pen.Width := <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="comment">//开始画图标</span></span><br><span class="line">    i := PDownLoadListItem(Item.Data)^.StatsImageIndex;</span><br><span class="line">    <span class="keyword">if</span> i &gt; -<span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">    <span class="comment">//获取图标的RECT</span></span><br><span class="line">      <span class="keyword">if</span> Boolean(ListView_GetSubItemRect(sender.Handle, item.<span class="keyword">Index</span>, <span class="number">0</span>, LVIR_ICON, @R1)) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        ImageList_Stats.Draw(LV.Canvas, R1.Left, R1.Top, i);</span><br><span class="line">        <span class="keyword">if</span> item.ImageIndex &gt; -<span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">          LV.SmallImages.Draw(LV.Canvas, R1.Right + <span class="number">2</span>, R1.Top, item.ImageIndex);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"> <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"> LV := ListView1;</span><br><span class="line"> BoundRect := Item.DisplayRect(drBounds);</span><br><span class="line"> InflateRect(BoundRect, -<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">//这个地方你可以根据自己的要求设置成想要的颜色，实现突出显示</span></span><br><span class="line"> LV.Canvas.Font.Color := clBtnText;</span><br><span class="line"><span class="comment">//查看是否是被选中</span></span><br><span class="line"> <span class="keyword">if</span> Item.Selected <span class="keyword">then</span></span><br><span class="line"> <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> cdsFocused <span class="keyword">in</span> State <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      LV.Canvas.Brush.Color := $<span class="number">00</span>ECCCB9; <span class="comment">// //clHighlight;</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      LV.Canvas.Brush.Color := $<span class="number">00</span>F8ECE5; <span class="comment">//clSilver;</span></span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (Item.<span class="keyword">Index</span> <span class="keyword">mod</span> <span class="number">2</span>) = <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">      LV.Canvas.Brush.Color := clWhite</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      LV.Canvas.Brush.Color := $<span class="number">00</span>F2F2F2;</span><br><span class="line"> <span class="keyword">end</span>;</span><br><span class="line"> LV.Canvas.FillRect(BoundRect); <span class="comment">//初始化背景</span></span><br><span class="line"> <span class="keyword">for</span> i := <span class="number">0</span> <span class="keyword">to</span> LV.Columns.Count - <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line"> <span class="keyword">begin</span></span><br><span class="line"> <span class="comment">//获取SubItem的Rect</span></span><br><span class="line">    ListView_GetSubItemRect(LV.Handle, Item.<span class="keyword">Index</span>, i, LVIR_LABEL, @Rect);</span><br><span class="line">    <span class="keyword">case</span> LV.Columns[i].Alignment <span class="keyword">of</span></span><br><span class="line">      taLeftJustify:</span><br><span class="line">        TextFormat := <span class="number">0</span>;</span><br><span class="line">      taRightJustify:</span><br><span class="line">        TextFormat := DT_RIGHT;</span><br><span class="line">      taCenter:</span><br><span class="line">        TextFormat := DT_CENTER;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">case</span> i <span class="keyword">of</span></span><br><span class="line">      <span class="number">0</span>: <span class="comment">//画Caption，0就是表示Caption，这不是Subitems[0]</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line"><span class="comment">//先画选择框与图标</span></span><br><span class="line">          Draw_CheckBox_ImageList(BoundRect, LV.Canvas, Item.Checked);</span><br><span class="line"><span class="comment">//再画Caption的文字</span></span><br><span class="line">          InflateRect(Rect, -(<span class="number">5</span> + ImageList_Stats.Width), <span class="number">0</span>); <span class="comment">//向后移3个像素,避免被后面画线框时覆盖</span></span><br><span class="line">          DrawText(</span><br><span class="line">            LV.Canvas.Handle,</span><br><span class="line">            PCHAR(Item.Caption),</span><br><span class="line">            Length(Item.Caption),</span><br><span class="line">            Rect,</span><br><span class="line">            DT_VCENTER <span class="keyword">or</span> DT_SINGLELINE <span class="keyword">or</span> DT_END_ELLIPSIS <span class="keyword">or</span> TextFormat);</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">      <span class="number">1</span>..MaxInt: <span class="comment">//画Subitems[i]</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          <span class="keyword">if</span> i - <span class="number">1</span> = <span class="number">2</span> <span class="keyword">then</span> <span class="comment">//显示状态条</span></span><br><span class="line">          <span class="keyword">begin</span></span><br><span class="line"><span class="comment">//开始处理进度条了，这个示例是第3栏显示进度条，可以自己随便定义</span></span><br><span class="line">            DrawSubItem(TListView(Sender),</span><br><span class="line">              item,</span><br><span class="line">              i,</span><br><span class="line">              StrToFloatDef(Item.SubItems[i - <span class="number">1</span>], <span class="number">0</span>),</span><br><span class="line">              <span class="number">100</span>,</span><br><span class="line">              <span class="number">0</span>,</span><br><span class="line">              True,</span><br><span class="line"> <span class="comment">//这里用了一个Lable来选颜色，你自己可以使用一个变量来代替</span></span><br><span class="line">             LableProgressColor.Color, <span class="comment">//进度条外框颜色</span></span><br><span class="line">              LableProgressColor.Color <span class="comment">//进度条颜色</span></span><br><span class="line">);</span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line"><span class="comment">//画SubItem的文字</span></span><br><span class="line">            <span class="keyword">if</span> i - <span class="number">1</span> &lt;= Item.SubItems.Count - <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">              DrawText(</span><br><span class="line">                LV.Canvas.Handle,</span><br><span class="line">                PCHAR(Item.SubItems[i - <span class="number">1</span>]),</span><br><span class="line">                Length(Item.SubItems[i - <span class="number">1</span>]),</span><br><span class="line">                Rect,</span><br><span class="line">                DT_VCENTER <span class="keyword">or</span> DT_SINGLELINE <span class="keyword">or</span> DT_END_ELLIPSIS <span class="keyword">or</span> TextFormat);</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"> <span class="keyword">end</span>;</span><br><span class="line"> LV.Canvas.Brush.Color := clWhite;</span><br><span class="line"> <span class="keyword">if</span> Item.Selected <span class="keyword">then</span> <span class="comment">//画选中条外框</span></span><br><span class="line"> <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> cdsFocused <span class="keyword">in</span> State <span class="keyword">then</span><span class="comment">//控件是否处于激活状态</span></span><br><span class="line">      LV.Canvas.Brush.Color := $<span class="number">00</span>DAA07A <span class="comment">// $00E2B598; //clHighlight;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      LV.Canvas.Brush.Color := $<span class="number">00</span>E2B598; <span class="comment">//$00DAA07A // clHighlight;</span></span><br><span class="line">    LV.Canvas.FrameRect(BoundRect); <span class="comment">//</span></span><br><span class="line"> <span class="keyword">end</span>;</span><br><span class="line"> DefaultDraw := False; <span class="comment">//不让系统画了</span></span><br><span class="line"> <span class="keyword">with</span> Sender.Canvas <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> Assigned(Font.OnChange) <span class="keyword">then</span> Font.OnChange(Font);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ReDrawItem</span><span class="params">(HwndLV: HWND; ItemIndex: integer)</span>:</span> boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  Result := ListView_RedrawItems(HwndLV, ItemIndex, ItemIndex);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"><span class="comment">//使用：</span></span><br><span class="line">item:=ListView1.Selected;</span><br><span class="line">item.subitems[<span class="number">1</span>]:=<span class="string">'30'</span>;<span class="comment">//设置为30%</span></span><br><span class="line"><span class="comment">//然后刷新这个item</span></span><br><span class="line">ReDrawItem(ListView1.handle,Item.<span class="keyword">index</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TListView的Item条一般是由系统自画的，但电驴就实现了自画，使之看起来很漂亮，我们用DELPHI也可以实现！&lt;/p&gt;
&lt;p&gt;用进度条时的效果:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/xzhifei/abf82d13bf6646eba8f01b11502d03b7.png&quot; alt=&quot;邱兴福&quot;&gt;&lt;/p&gt;
&lt;p&gt;不用进度条时的效果:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/xzhifei/a4fa03c311534829b28d4449fd681d5d.png&quot; alt=&quot;TListView自绘&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Delphi" scheme="http://www.qxyer.com/categories/Delphi/"/>
    
    
  </entry>
  
  <entry>
    <title>通过崩溃地址找出Delphi源码的出错行</title>
    <link href="http://www.qxyer.com/2012/05/23/delphi-raised-exception/"/>
    <id>http://www.qxyer.com/2012/05/23/delphi-raised-exception/</id>
    <published>2012-05-23T06:39:00.000Z</published>
    <updated>2018-04-26T10:47:30.772Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是MAP文件"><a href="#什么是MAP文件" class="headerlink" title="什么是MAP文件"></a>什么是MAP文件</h3><p>   什么是 MAP 文件？简单地讲， MAP 文件是程序的全局符号、源文件和代码行号信息的唯一的文本表示方法，它可以在任何地方、任何时候使用，不需要有额外的程序进行支持。而且，这是唯一能找出程序崩溃的地方的救星。</p><p>如果要查找代码行号，需要使用下面的公式做一些十六进制的减法运算：</p><p>崩溃行偏移 = 崩溃地址（Crash Address） - 基地址（ImageBase Address） - 0x1000</p><p>为什么要这样做呢？我们得到的崩溃地址都是由 偏移地址+ 基地址得来的，所以在计算行号的时候要把基地址减去，一般情况下，基地址的值是 0x00400000 。另外，由于一般的 PE 文件的代码段都是从 0x1000 偏移开始的，所以也必须减去 0x1000 。</p><h3 id="Delphi-下生成MAP文件的方法"><a href="#Delphi-下生成MAP文件的方法" class="headerlink" title="Delphi 下生成MAP文件的方法"></a>Delphi 下生成MAP文件的方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">project-&gt;options-&gt;Linker-&gt;Map file 选择detailed.</span><br></pre></td></tr></table></figure><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TForm1</span>.<span class="title">Button1Click</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">    I,   J:   Integer;</span><br><span class="line">    p:   PChar;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    I   :=   <span class="number">10</span>;</span><br><span class="line">    J   :=   <span class="number">0</span>;</span><br><span class="line">    p   :=   <span class="keyword">nil</span>;</span><br><span class="line">    p^   :=   <span class="string">'A'</span>;   <span class="comment">//   36行.  这里会报错</span></span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>运行时会抱错</p><p><img src="http://p.blog.csdn.net/images/p_blog_csdn_net/taoff/error.bmp" alt="邱兴福"></p><p>这里可以发现出错地址是:<code>$00401A51</code></p><p>根据: 崩溃行偏移 = 崩溃地址（Crash Address） - 基地址（ImageBase Address） - 0x1000</p><p>=$00401A51 - $00400000 -$1000</p><p>=$00000A51</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">用记事本打开生成的MAP文件</span><br><span class="line">Line numbers <span class="keyword">for</span> Unit1(Unit1.pas) segment .text</span><br><span class="line">32 0001:00000A48    35 0001:00000A49     36 0001:00000A4E    37 0001:00000A54</span><br><span class="line">40 0001:00000A58    42 0001:00000A7D    43 0001:00000A8E    44 0001:00000ABD</span><br><span class="line">45 0001:00000AEE    49 0001:00000AF8    50 0001:00000B10    52 0001:00000B44</span><br><span class="line">52 0001:00000B4B</span><br></pre></td></tr></table></figure><p>那么,通过在MAP文件里查找小于或等于$00000A51的最大值就是,我们要得到的崩溃行偏移.<br>这样得到出错行在, Unit1单元的36行.<br>正好是这行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p^ := <span class="string">'A'</span>;   //36行.  这里会报错</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;什么是MAP文件&quot;&gt;&lt;a href=&quot;#什么是MAP文件&quot; class=&quot;headerlink&quot; title=&quot;什么是MAP文件&quot;&gt;&lt;/a&gt;什么是MAP文件&lt;/h3&gt;&lt;p&gt;   什么是 MAP 文件？简单地讲， MAP 文件是程序的全局符号、源文件和代码行号信息的
      
    
    </summary>
    
      <category term="Delphi" scheme="http://www.qxyer.com/categories/Delphi/"/>
    
    
  </entry>
  
  <entry>
    <title>win7下安装Delphi7</title>
    <link href="http://www.qxyer.com/2012/05/14/win7-delphi7-install/"/>
    <id>http://www.qxyer.com/2012/05/14/win7-delphi7-install/</id>
    <published>2012-05-14T05:33:00.000Z</published>
    <updated>2018-04-26T10:47:30.772Z</updated>
    
    <content type="html"><![CDATA[<p>在xp的时候使用联机测试兼容性会提示delphi7有已知兼容性问题，不过安装的时候右键使用管理员身份，并没有提示兼容性的问题，但是在使用的时候提示不能rename，权限不足。</p><h3 id="解决问题的方法很简单："><a href="#解决问题的方法很简单：" class="headerlink" title="解决问题的方法很简单："></a>解决问题的方法很简单：</h3><ol><li>修改“C:\Program Files\Borland\Delphi7\Bin”的权限（右击上面的目录-》属性-》安全-》编辑-》修改后确定退出），赋予于users组修改权限；</li><li>修改“C:\Program Files\Borland\Delphi7\Projects”的权限（右击上面的目录-》属性-》安全-》编辑-》修改后确定退出），赋予于users组修改权限；</li><li>运行之，一切正常。</li></ol><h3 id="win7下Delphi7的帮助不能正常使用-可以安装KB917607补丁包"><a href="#win7下Delphi7的帮助不能正常使用-可以安装KB917607补丁包" class="headerlink" title="win7下Delphi7的帮助不能正常使用,可以安装KB917607补丁包:"></a>win7下Delphi7的帮助不能正常使用,可以安装KB917607补丁包:</h3><p><a href="http://download.microsoft.com/download/9/A/8/9A8FCFAA-78A0-49F5-8C8E-4EAE185F515C/Windows6.1-KB917607-x86.msu" target="_blank" rel="noopener">32位win7</a></p><p><a href="http://download.microsoft.com/download/9/A/8/9A8FCFAA-78A0-49F5-8C8E-4EAE185F515C/Windows6.1-KB917607-x64.msu" target="_blank" rel="noopener">64位win7</a></p><p>推荐两个我用的插件:Castalia5_D7, ModelMaker Code Explorer 都可以在Win7正上常安装并使用，推荐安装的时候使用右键管理员身份运行安装，避免一些不必要的问题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在xp的时候使用联机测试兼容性会提示delphi7有已知兼容性问题，不过安装的时候右键使用管理员身份，并没有提示兼容性的问题，但是在使用的时候提示不能rename，权限不足。&lt;/p&gt;
&lt;h3 id=&quot;解决问题的方法很简单：&quot;&gt;&lt;a href=&quot;#解决问题的方法很简单：&quot; c
      
    
    </summary>
    
      <category term="Delphi" scheme="http://www.qxyer.com/categories/Delphi/"/>
    
    
  </entry>
  
  <entry>
    <title>Ubuntu 自动安装部署 Rails 环境-转自：李华顺</title>
    <link href="http://www.qxyer.com/2012/05/03/auto-deploy-rails-on-ububuntu/"/>
    <id>http://www.qxyer.com/2012/05/03/auto-deploy-rails-on-ububuntu/</id>
    <published>2012-05-03T02:15:00.000Z</published>
    <updated>2018-04-26T10:47:30.771Z</updated>
    
    <content type="html"><![CDATA[<p>你需要经常安装部署 Rails 到新的 Web 服务器吗？</p><br><p>你是否还在经历每次从安装 Ruby Rubygems MySQL… 再到安装 Web Server 组件… 反复烦躁的安装流程呢？</p><br><p>现在你可以改用这个脚本实现在 Ubuntu Server 上面部署 <span style="color: #000080;"><span style="background-color: #99ccff;"><strong>Ruby1.8</strong> + <strong>Rails </strong>+ <strong>Passenger </strong>+ </span></span><strong><span style="color: #000080;"><span style="background-color: #99ccff;">Nginx</span></span> </strong>的环境：</p><br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"=== YTRIPTHIRD UBUNTU INSTALL ==="</span></span><br><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ruby</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"=== Install Ruby library..."</span></span><br><span class="line">sudo apt-get install g++ ruby1.8 rubygems rake irb ruby1.8-dev build-essential libopenssl-ruby imagemagick rmagick </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"=== Ruby library install done."</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL Server</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">"Do you wan't install MySQL automatic[y/n]:"</span></span><br><span class="line"><span class="built_in">read</span> KEY</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$KEY</span> <span class="keyword">in</span></span><br><span class="line">y|Y)</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"=== Install MySQL server..."</span></span><br><span class="line">  sudo apt-get install mysql-server mysql</span><br><span class="line">  ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">sudo apt-get install libmysqlclient-dev</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"=== MySQL install done."</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Rubygems</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">"Do you wan't install Rubygems?[y/n]:"</span></span><br><span class="line"><span class="built_in">read</span> KEY</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$KEY</span> <span class="keyword">in</span></span><br><span class="line">y|Y)</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"=== Install Rubygems from source file..."</span></span><br><span class="line">  wget http://rubyforge.org/frs/download.php/60719/rubygems-1.3.5.zip</span><br><span class="line">  unzip rubygems-1.3.5.zip</span><br><span class="line">  <span class="built_in">cd</span> rubygems-1.3.5</span><br><span class="line">  sudo ruby setup.rb</span><br><span class="line">  sudo gem sources -a http://gems.github.com</span><br><span class="line">  <span class="built_in">cd</span> ..</span><br><span class="line">  sudo rm -R /tmp/rubygems-1.3.5</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"=== Rubygems install done."</span></span><br><span class="line">  ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install Rails</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">"Do you wan't install Rails?[y/n]"</span></span><br><span class="line"><span class="built_in">read</span> KEY</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$KEY</span> <span class="keyword">in</span></span><br><span class="line">y|Y)</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"=== Install Rails and some Gems..."</span></span><br><span class="line">  sudo gem install rails passenger --no-rdoc</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"=== Rails install done."</span></span><br><span class="line">  ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install Web server</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"=== Install Web Server"</span></span><br><span class="line">wget http://sysoev.ru/nginx/nginx-0.7.64.tar.gz</span><br><span class="line">tar zxf nginx-0.7.64.tar.gz</span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"===*** Nginx install Warring! ***==="</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"   *** nginx source path: /tmp/nginx-0.7.64 "</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"   *** must be install nginx in: /etc/nginx "</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line">sudo passenger-install-nginx-module</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"=== Web Server install done."</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br></pre></td></tr></table></figure><br><br><p>此脚本一在 Ubuntu Server 9.04 版本上面测试通过，不过可能有些时候需要对这个脚本做一些微调后方可适应你的环境，如 Ruby 的版本、Rails的版本…</p><br><p>或者你不想用 Passenger + Nginx 来部署你的 Rails App，也可以修改 <strong>Install Web Server</strong> 这段。</p><br><p>或者还可以在 第一段批处理的地方加入更多的类库安装….</p><br><p>总之，本脚本是给你一个参考例子，以后部署 Rails App 别再手动安装了，把你的安装过程整理到 Shell 脚本中去，然后： <code>$ sh install-ubuntu.sh</code><br></p><p>搞定所有流程，方便省事，又不用每次部署的时候反复的在 Google 上面查资料！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;你需要经常安装部署 Rails 到新的 Web 服务器吗？&lt;/p&gt;&lt;br&gt;&lt;p&gt;你是否还在经历每次从安装 Ruby Rubygems MySQL… 再到安装 Web Server 组件… 反复烦躁的安装流程呢？&lt;/p&gt;&lt;br&gt;&lt;p&gt;现在你可以改用这个脚本实现在 Ubuntu Server 上面部署 &lt;span style=&quot;color: #000080;&quot;&gt;&lt;span style=&quot;background-color: #99ccff;&quot;&gt;&lt;strong&gt;Ruby1.8&lt;/strong&gt; + &lt;strong&gt;Rails &lt;/strong&gt;+ &lt;strong&gt;Passenger &lt;/strong&gt;+ &lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color: #000080;&quot;&gt;&lt;span style=&quot;background-color: #99ccff;&quot;&gt;Nginx&lt;/span&gt;&lt;/span&gt; &lt;/strong&gt;的环境：&lt;/p&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Rails" scheme="http://www.qxyer.com/categories/Rails/"/>
    
      <category term="Ubuntu" scheme="http://www.qxyer.com/categories/Rails/Ubuntu/"/>
    
      <category term="Ruby" scheme="http://www.qxyer.com/categories/Rails/Ubuntu/Ruby/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello Octopress</title>
    <link href="http://www.qxyer.com/2012/05/02/hello-octopress/"/>
    <id>http://www.qxyer.com/2012/05/02/hello-octopress/</id>
    <published>2012-05-02T04:21:00.000Z</published>
    <updated>2018-04-26T10:47:30.771Z</updated>
    
    <content type="html"><![CDATA[<p>最近看好多人都用上了<a href="http://octopress.org" target="_blank" rel="noopener">Octopress</a>，我也跟了一把风。</p><p>我一直很懒，初入道时注册的博客基本上都是很久不会更新一下，主要是觉得太麻烦了。每次想写点东西都要开网页,进管理界面，还随时担心着在编辑过程中不小心关掉浏览器Ooops…<br>不行，这样点都没有程序员的风格了。<br>直到最近看到<a href="http://huacnlee.com" target="_blank" rel="noopener">李华顺</a>的博客,问了它才知道Octopress这个利器,太适合我的风格了</p><p>相比传统的方式，Octopress至少有下面几个优势 </p><a id="more"></a><ul><li>Octopress是将博客放到github或者heroku，不需要额外的VPS或者空间，节省了钱和管理的时间。 </li><li>只需要本地编辑Markdown文件，然后再一键发布到上去，不再需要打开后台管理界面来编辑HTML。</li><li>Octopress将Markdown文件生成静态HTML页面。全站都是静态页面，效率上不会有问题。也不用管理数据库，备份也简单。 </li><li>Octopress完美的支持内嵌代码。这儿有一个Octopress支持的语言列表。 </li><li>完美支持手机浏览。</li></ul><p>更多的不说了,折腾之…</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>注册并配置github。 配置请<a href="http://help.github.com/mac-set-up-git/" target="_blank" rel="noopener">参考</a></li><li>安装Git并且掌握几个基本的<a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a>命令。</li><li>掌握<a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">markdown</a>语法。</li></ul><h3 id="安装RVM"><a href="#安装RVM" class="headerlink" title="安装RVM"></a>安装RVM</h3><p><a href="http://octopress.org/docs/setup/rvm/" target="_blank" rel="noopener">http://octopress.org/docs/setup/rvm/</a></p><h3 id="配置Octopress"><a href="#配置Octopress" class="headerlink" title="配置Octopress"></a>配置Octopress</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从Octopress的源代码克隆你的本地</span></span><br><span class="line">git <span class="built_in">clone</span> git://github.com/imathis/octopress.git octopress</span><br><span class="line"><span class="built_in">cd</span> octopress    <span class="comment"># If you use RVM, You'll be asked if you trust the .rvmrc file (say yes).</span></span><br><span class="line">ruby --version  <span class="comment"># Should report Ruby 1.9.2</span></span><br><span class="line"><span class="comment"># 初始化Octopress环境</span></span><br><span class="line">gem install bundler</span><br><span class="line">bundle install</span><br><span class="line">rake install</span><br><span class="line"><span class="comment"># 绑定Github的Rep, 这里会让你输入用来存储站点的GitHub项目地址,如:git@github.com:xingfuqiu/xingfuqiu.github.com.git</span></span><br><span class="line">rake setup_github_pages</span><br><span class="line"><span class="comment"># 发布Octopress</span></span><br><span class="line">rake generate <span class="comment">#</span></span><br><span class="line">rake preview <span class="comment"># 你可以用这个命令在本地来预览:http://127.0.0.1:4000</span></span><br><span class="line">rake deploy <span class="comment"># 发布</span></span><br><span class="line"><span class="comment"># 在输入下面命令来发布一篇新文章，Octopress会生成一个markdown文件。</span></span><br><span class="line">rake new_post[<span class="string">'hello octopress'</span>] <span class="comment"># Creating new post: source/_posts/2012-03-28-hello-octopress.markdown</span></span><br><span class="line"><span class="comment"># 编辑好2012-03-28-hello-octopress.markdown再发布到Octopress即可</span></span><br></pre></td></tr></table></figure><p>这里只是简单的写了一Octopress的安装发布,更多帮助请看:<a href="http://octopress.org/docs/setup/" target="_blank" rel="noopener">http://octopress.org/docs/setup/</a><br>最后,祝大家玩得愉快，附上Octopress主页的副标题 - A blogging framework for hackers。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近看好多人都用上了&lt;a href=&quot;http://octopress.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Octopress&lt;/a&gt;，我也跟了一把风。&lt;/p&gt;
&lt;p&gt;我一直很懒，初入道时注册的博客基本上都是很久不会更新一下，主要是觉得太麻烦了。每次想写点东西都要开网页,进管理界面，还随时担心着在编辑过程中不小心关掉浏览器Ooops…&lt;br&gt;不行，这样点都没有程序员的风格了。&lt;br&gt;直到最近看到&lt;a href=&quot;http://huacnlee.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;李华顺&lt;/a&gt;的博客,问了它才知道Octopress这个利器,太适合我的风格了&lt;/p&gt;
&lt;p&gt;相比传统的方式，Octopress至少有下面几个优势 &lt;/p&gt;
    
    </summary>
    
      <category term="Octopress" scheme="http://www.qxyer.com/categories/Octopress/"/>
    
    
  </entry>
  
</feed>
